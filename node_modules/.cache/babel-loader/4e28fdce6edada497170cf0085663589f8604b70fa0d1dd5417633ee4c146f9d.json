{"ast":null,"code":"var _jsxFileName = \"C:\\\\_Projects\\\\DGL_ToDo\\\\react_todo_dashboard2\\\\src\\\\components\\\\TaskPanel.jsx\",\n  _s = $RefreshSig$();\n// src/components/TaskPanel.jsx\nimport React, { useState } from 'react';\nimport { useMsal } from '@azure/msal-react';\nimport { InteractionRequiredAuthError } from '@azure/msal-browser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskPanel = ({\n  tasks,\n  onSelectTask,\n  listId\n}) => {\n  _s();\n  const {\n    instance\n  } = useMsal();\n  const [newTask, setNewTask] = useState('');\n  const handleAddTask = async () => {\n    if (!newTask.trim() || !listId) return;\n    const account = instance.getActiveAccount();\n    if (!account) return;\n    let response;\n    try {\n      response = await instance.acquireTokenSilent({\n        scopes: ['Tasks.ReadWrite'],\n        account\n      });\n    } catch (error) {\n      if (error instanceof InteractionRequiredAuthError) {\n        response = await instance.loginPopup({\n          scopes: ['Tasks.ReadWrite']\n        });\n        instance.setActiveAccount(response.account);\n      } else {\n        console.error('Error acquiring token:', error);\n        return;\n      }\n    }\n    await fetch(`https://graph.microsoft.com/v1.0/me/todo/lists/${listId}/tasks`, {\n      method: 'POST',\n      headers: {\n        Authorization: `Bearer ${response.accessToken}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        title: newTask\n      })\n    });\n    setNewTask('');\n  };\n  const handleCompleteTask = async taskId => {\n    const account = instance.getActiveAccount();\n    if (!account) return;\n    let response;\n    try {\n      response = await instance.acquireTokenSilent({\n        scopes: ['Tasks.ReadWrite'],\n        account\n      });\n    } catch (error) {\n      if (error instanceof InteractionRequiredAuthError) {\n        response = await instance.loginPopup({\n          scopes: ['Tasks.ReadWrite']\n        });\n        instance.setActiveAccount(response.account);\n      } else {\n        console.error('Error acquiring token:', error);\n        return;\n      }\n    }\n    await fetch(`https://graph.microsoft.com/v1.0/me/todo/lists/${listId}/tasks/${taskId}`, {\n      method: 'PATCH',\n      headers: {\n        Authorization: `Bearer ${response.accessToken}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        status: 'completed'\n      })\n    });\n  };\n  const incompleteTasks = tasks.filter(task => task.status !== 'completed').sort((a, b) => a.title.localeCompare(b.title));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [incompleteTasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: '0.8rem'\n      },\n      children: \"No tasks found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        fontSize: '0.8rem'\n      },\n      children: incompleteTasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          onChange: () => handleCompleteTask(task.id),\n          style: {\n            marginRight: '6px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => onSelectTask(task),\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newTask,\n      onChange: e => setNewTask(e.target.value),\n      onKeyDown: e => e.key === 'Enter' && handleAddTask(),\n      placeholder: \"Add new task\",\n      style: {\n        width: '100%',\n        marginTop: '8px',\n        fontSize: '0.8rem'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskPanel, \"kpND/teXM7UAJp/4kDZ1AJ77p2I=\", false, function () {\n  return [useMsal];\n});\n_c = TaskPanel;\nexport default TaskPanel;\nvar _c;\n$RefreshReg$(_c, \"TaskPanel\");","map":{"version":3,"names":["React","useState","useMsal","InteractionRequiredAuthError","jsxDEV","_jsxDEV","TaskPanel","tasks","onSelectTask","listId","_s","instance","newTask","setNewTask","handleAddTask","trim","account","getActiveAccount","response","acquireTokenSilent","scopes","error","loginPopup","setActiveAccount","console","fetch","method","headers","Authorization","accessToken","body","JSON","stringify","title","handleCompleteTask","taskId","status","incompleteTasks","filter","task","sort","a","b","localeCompare","children","length","style","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","map","type","onChange","id","marginRight","onClick","value","e","target","onKeyDown","key","placeholder","width","marginTop","_c","$RefreshReg$"],"sources":["C:/_Projects/DGL_ToDo/react_todo_dashboard2/src/components/TaskPanel.jsx"],"sourcesContent":["// src/components/TaskPanel.jsx\r\nimport React, { useState } from 'react';\r\nimport { useMsal } from '@azure/msal-react';\r\nimport { InteractionRequiredAuthError } from '@azure/msal-browser';\r\n\r\nconst TaskPanel = ({ tasks, onSelectTask, listId }) => {\r\n  const { instance } = useMsal();\r\n  const [newTask, setNewTask] = useState('');\r\n\r\n  const handleAddTask = async () => {\r\n    if (!newTask.trim() || !listId) return;\r\n\r\n    const account = instance.getActiveAccount();\r\n    if (!account) return;\r\n\r\n    let response;\r\n    try {\r\n      response = await instance.acquireTokenSilent({\r\n        scopes: ['Tasks.ReadWrite'],\r\n        account,\r\n      });\r\n    } catch (error) {\r\n      if (error instanceof InteractionRequiredAuthError) {\r\n        response = await instance.loginPopup({\r\n          scopes: ['Tasks.ReadWrite'],\r\n        });\r\n        instance.setActiveAccount(response.account);\r\n      } else {\r\n        console.error('Error acquiring token:', error);\r\n        return;\r\n      }\r\n    }\r\n\r\n    await fetch(`https://graph.microsoft.com/v1.0/me/todo/lists/${listId}/tasks`, {\r\n      method: 'POST',\r\n      headers: {\r\n        Authorization: `Bearer ${response.accessToken}`,\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ title: newTask }),\r\n    });\r\n\r\n    setNewTask('');\r\n  };\r\n\r\n  const handleCompleteTask = async (taskId) => {\r\n    const account = instance.getActiveAccount();\r\n    if (!account) return;\r\n\r\n    let response;\r\n    try {\r\n      response = await instance.acquireTokenSilent({\r\n        scopes: ['Tasks.ReadWrite'],\r\n        account,\r\n      });\r\n    } catch (error) {\r\n      if (error instanceof InteractionRequiredAuthError) {\r\n        response = await instance.loginPopup({\r\n          scopes: ['Tasks.ReadWrite'],\r\n        });\r\n        instance.setActiveAccount(response.account);\r\n      } else {\r\n        console.error('Error acquiring token:', error);\r\n        return;\r\n      }\r\n    }\r\n\r\n    await fetch(`https://graph.microsoft.com/v1.0/me/todo/lists/${listId}/tasks/${taskId}`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        Authorization: `Bearer ${response.accessToken}`,\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ status: 'completed' }),\r\n    });\r\n  };\r\n\r\n  const incompleteTasks = tasks\r\n    .filter((task) => task.status !== 'completed')\r\n    .sort((a, b) => a.title.localeCompare(b.title));\r\n\r\n  return (\r\n    <div>\r\n      {incompleteTasks.length === 0 ? (\r\n        <p style={{ fontSize: '0.8rem' }}>No tasks found.</p>\r\n      ) : (\r\n        <ul style={{ fontSize: '0.8rem' }}>\r\n          {incompleteTasks.map((task) => (\r\n            <li key={task.id}>\r\n              <input\r\n                type=\"checkbox\"\r\n                onChange={() => handleCompleteTask(task.id)}\r\n                style={{ marginRight: '6px' }}\r\n              />\r\n              <span onClick={() => onSelectTask(task)}>{task.title}</span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n      <input\r\n        type=\"text\"\r\n        value={newTask}\r\n        onChange={(e) => setNewTask(e.target.value)}\r\n        onKeyDown={(e) => e.key === 'Enter' && handleAddTask()}\r\n        placeholder=\"Add new task\"\r\n        style={{ width: '100%', marginTop: '8px', fontSize: '0.8rem' }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskPanel;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}