{"ast":null,"code":"var _jsxFileName = \"C:\\\\_Projects\\\\DGL_ToDo\\\\react_todo_dashboard2\\\\src\\\\components\\\\TaskPanel.jsx\",\n  _s = $RefreshSig$();\n// src/components/TaskPanel.jsx\nimport React, { useState } from 'react';\nimport { useMsal } from '@azure/msal-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskPanel = ({\n  tasks,\n  onSelectTask,\n  listId\n}) => {\n  _s();\n  const {\n    instance\n  } = useMsal();\n  const [newTask, setNewTask] = useState('');\n  const handleAddTask = async () => {\n    if (!newTask.trim() || !listId) return;\n    const account = instance.getActiveAccount();\n    if (!account) return;\n    const response = await instance.acquireTokenSilent({\n      scopes: ['Tasks.ReadWrite'],\n      account\n    });\n    await fetch(`https://graph.microsoft.com/v1.0/me/todo/lists/${listId}/tasks`, {\n      method: 'POST',\n      headers: {\n        Authorization: `Bearer ${response.accessToken}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        title: newTask\n      })\n    });\n    setNewTask('');\n    // Optionally: trigger a refresh of tasks externally\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!tasks || tasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: '0.8rem'\n      },\n      children: \"No tasks found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        fontSize: '0.8rem'\n      },\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => onSelectTask(task),\n        children: [task.title, \" \", task.status === 'completed' && '✅']\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newTask,\n      onChange: e => setNewTask(e.target.value),\n      onKeyDown: e => e.key === 'Enter' && handleAddTask(),\n      placeholder: \"Add new task\",\n      style: {\n        width: '100%',\n        marginTop: '8px',\n        fontSize: '0.8rem'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskPanel, \"kpND/teXM7UAJp/4kDZ1AJ77p2I=\", false, function () {\n  return [useMsal];\n});\n_c = TaskPanel;\nexport default TaskPanel;\nvar _c;\n$RefreshReg$(_c, \"TaskPanel\");","map":{"version":3,"names":["React","useState","useMsal","jsxDEV","_jsxDEV","TaskPanel","tasks","onSelectTask","listId","_s","instance","newTask","setNewTask","handleAddTask","trim","account","getActiveAccount","response","acquireTokenSilent","scopes","fetch","method","headers","Authorization","accessToken","body","JSON","stringify","title","children","length","style","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","map","task","onClick","status","id","type","value","onChange","e","target","onKeyDown","key","placeholder","width","marginTop","_c","$RefreshReg$"],"sources":["C:/_Projects/DGL_ToDo/react_todo_dashboard2/src/components/TaskPanel.jsx"],"sourcesContent":["// src/components/TaskPanel.jsx\r\nimport React, { useState } from 'react';\r\nimport { useMsal } from '@azure/msal-react';\r\n\r\nconst TaskPanel = ({ tasks, onSelectTask, listId }) => {\r\n  const { instance } = useMsal();\r\n  const [newTask, setNewTask] = useState('');\r\n\r\n  const handleAddTask = async () => {\r\n    if (!newTask.trim() || !listId) return;\r\n\r\n    const account = instance.getActiveAccount();\r\n    if (!account) return;\r\n\r\n    const response = await instance.acquireTokenSilent({\r\n      scopes: ['Tasks.ReadWrite'],\r\n      account,\r\n    });\r\n\r\n    await fetch(`https://graph.microsoft.com/v1.0/me/todo/lists/${listId}/tasks`, {\r\n      method: 'POST',\r\n      headers: {\r\n        Authorization: `Bearer ${response.accessToken}`,\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ title: newTask }),\r\n    });\r\n\r\n    setNewTask('');\r\n    // Optionally: trigger a refresh of tasks externally\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {(!tasks || tasks.length === 0) ? (\r\n        <p style={{ fontSize: '0.8rem' }}>No tasks found.</p>\r\n      ) : (\r\n        <ul style={{ fontSize: '0.8rem' }}>\r\n          {tasks.map((task) => (\r\n            <li key={task.id} onClick={() => onSelectTask(task)}>\r\n              {task.title} {task.status === 'completed' && '✅'}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n      <input\r\n        type=\"text\"\r\n        value={newTask}\r\n        onChange={(e) => setNewTask(e.target.value)}\r\n        onKeyDown={(e) => e.key === 'Enter' && handleAddTask()}\r\n        placeholder=\"Add new task\"\r\n        style={{ width: '100%', marginTop: '8px', fontSize: '0.8rem' }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskPanel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}