{"ast":null,"code":"var _jsxFileName = \"C:\\\\_Projects\\\\DGL_ToDo\\\\react_todo_dashboard2\\\\src\\\\components\\\\PreviewPanel.jsx\",\n  _s = $RefreshSig$();\n// src/components/TaskPanel.jsx\nimport React, { useState } from 'react';\nimport { useMsal } from '@azure/msal-react';\nimport { InteractionRequiredAuthError } from '@azure/msal-browser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskPanel = ({\n  tasks,\n  onSelectTask,\n  listId\n}) => {\n  _s();\n  const {\n    instance\n  } = useMsal();\n  const [newTask, setNewTask] = useState('');\n  const [editedTitles, setEditedTitles] = useState({});\n  const handleAddTask = async () => {\n    if (!newTask.trim() || !listId) return;\n    const account = instance.getActiveAccount();\n    if (!account) return;\n    let response;\n    try {\n      response = await instance.acquireTokenSilent({\n        scopes: ['Tasks.ReadWrite'],\n        account\n      });\n    } catch (error) {\n      if (error instanceof InteractionRequiredAuthError) {\n        response = await instance.loginPopup({\n          scopes: ['Tasks.ReadWrite']\n        });\n        instance.setActiveAccount(response.account);\n      } else {\n        console.error('Error acquiring token:', error);\n        return;\n      }\n    }\n    await fetch(`https://graph.microsoft.com/v1.0/me/todo/lists/${listId}/tasks`, {\n      method: 'POST',\n      headers: {\n        Authorization: `Bearer ${response.accessToken}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        title: newTask\n      })\n    });\n    setNewTask('');\n  };\n  const handleCompleteTask = async taskId => {\n    const account = instance.getActiveAccount();\n    if (!account) return;\n    let response;\n    try {\n      response = await instance.acquireTokenSilent({\n        scopes: ['Tasks.ReadWrite'],\n        account\n      });\n    } catch (error) {\n      if (error instanceof InteractionRequiredAuthError) {\n        response = await instance.loginPopup({\n          scopes: ['Tasks.ReadWrite']\n        });\n        instance.setActiveAccount(response.account);\n      } else {\n        console.error('Error acquiring token:', error);\n        return;\n      }\n    }\n    await fetch(`https://graph.microsoft.com/v1.0/me/todo/lists/${listId}/tasks/${taskId}`, {\n      method: 'PATCH',\n      headers: {\n        Authorization: `Bearer ${response.accessToken}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        status: 'completed'\n      })\n    });\n  };\n  const handleTitleChange = (taskId, newTitle) => {\n    setEditedTitles(prev => ({\n      ...prev,\n      [taskId]: newTitle\n    }));\n  };\n  const handleTitleBlur = async taskId => {\n    const newTitle = editedTitles[taskId];\n    if (!newTitle) return;\n    const account = instance.getActiveAccount();\n    if (!account) return;\n    let response;\n    try {\n      response = await instance.acquireTokenSilent({\n        scopes: ['Tasks.ReadWrite'],\n        account\n      });\n    } catch (error) {\n      if (error instanceof InteractionRequiredAuthError) {\n        response = await instance.loginPopup({\n          scopes: ['Tasks.ReadWrite']\n        });\n        instance.setActiveAccount(response.account);\n      } else {\n        console.error('Error acquiring token:', error);\n        return;\n      }\n    }\n    await fetch(`https://graph.microsoft.com/v1.0/me/todo/lists/${listId}/tasks/${taskId}`, {\n      method: 'PATCH',\n      headers: {\n        Authorization: `Bearer ${response.accessToken}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        title: newTitle\n      })\n    });\n    setEditedTitles(prev => {\n      const updated = {\n        ...prev\n      };\n      delete updated[taskId];\n      return updated;\n    });\n  };\n  const incompleteTasks = tasks.filter(task => task.status !== 'completed').sort((a, b) => {\n    const aTitle = a.title || '';\n    const bTitle = b.title || '';\n    const aIsBottom = aTitle.startsWith('🕳️');\n    const bIsBottom = bTitle.startsWith('🕳️');\n    if (aIsBottom && !bIsBottom) return 1;\n    if (!aIsBottom && bIsBottom) return -1;\n    return aTitle.localeCompare(bTitle);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [incompleteTasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: '0.8rem'\n      },\n      children: \"No tasks found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        fontSize: '0.8rem'\n      },\n      children: incompleteTasks.map(task => {\n        var _editedTitles$task$id;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            onChange: () => handleCompleteTask(task.id),\n            style: {\n              marginRight: '6px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: (_editedTitles$task$id = editedTitles[task.id]) !== null && _editedTitles$task$id !== void 0 ? _editedTitles$task$id : task.title,\n            onChange: e => handleTitleChange(task.id, e.target.value),\n            onBlur: () => handleTitleBlur(task.id),\n            style: {\n              fontSize: '0.8rem',\n              width: '80%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newTask,\n      onChange: e => setNewTask(e.target.value),\n      onKeyDown: e => e.key === 'Enter' && handleAddTask(),\n      placeholder: \"Add new task\",\n      style: {\n        width: '100%',\n        marginTop: '8px',\n        fontSize: '0.8rem'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskPanel, \"h0XFpD+3cQfdCxWqFHVUHFm/W48=\", false, function () {\n  return [useMsal];\n});\n_c = TaskPanel;\nexport default TaskPanel;\nvar _c;\n$RefreshReg$(_c, \"TaskPanel\");","map":{"version":3,"names":["React","useState","useMsal","InteractionRequiredAuthError","jsxDEV","_jsxDEV","TaskPanel","tasks","onSelectTask","listId","_s","instance","newTask","setNewTask","editedTitles","setEditedTitles","handleAddTask","trim","account","getActiveAccount","response","acquireTokenSilent","scopes","error","loginPopup","setActiveAccount","console","fetch","method","headers","Authorization","accessToken","body","JSON","stringify","title","handleCompleteTask","taskId","status","handleTitleChange","newTitle","prev","handleTitleBlur","updated","incompleteTasks","filter","task","sort","a","b","aTitle","bTitle","aIsBottom","startsWith","bIsBottom","localeCompare","children","length","style","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","map","_editedTitles$task$id","type","onChange","id","marginRight","value","e","target","onBlur","width","onKeyDown","key","placeholder","marginTop","_c","$RefreshReg$"],"sources":["C:/_Projects/DGL_ToDo/react_todo_dashboard2/src/components/PreviewPanel.jsx"],"sourcesContent":["// src/components/TaskPanel.jsx\nimport React, { useState } from 'react';\nimport { useMsal } from '@azure/msal-react';\nimport { InteractionRequiredAuthError } from '@azure/msal-browser';\n\nconst TaskPanel = ({ tasks, onSelectTask, listId }) => {\n  const { instance } = useMsal();\n  const [newTask, setNewTask] = useState('');\n  const [editedTitles, setEditedTitles] = useState({});\n\n  const handleAddTask = async () => {\n    if (!newTask.trim() || !listId) return;\n    const account = instance.getActiveAccount();\n    if (!account) return;\n\n    let response;\n    try {\n      response = await instance.acquireTokenSilent({\n        scopes: ['Tasks.ReadWrite'],\n        account,\n      });\n    } catch (error) {\n      if (error instanceof InteractionRequiredAuthError) {\n        response = await instance.loginPopup({\n          scopes: ['Tasks.ReadWrite'],\n        });\n        instance.setActiveAccount(response.account);\n      } else {\n        console.error('Error acquiring token:', error);\n        return;\n      }\n    }\n\n    await fetch(`https://graph.microsoft.com/v1.0/me/todo/lists/${listId}/tasks`, {\n      method: 'POST',\n      headers: {\n        Authorization: `Bearer ${response.accessToken}`,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ title: newTask }),\n    });\n\n    setNewTask('');\n  };\n\n  const handleCompleteTask = async (taskId) => {\n    const account = instance.getActiveAccount();\n    if (!account) return;\n\n    let response;\n    try {\n      response = await instance.acquireTokenSilent({\n        scopes: ['Tasks.ReadWrite'],\n        account,\n      });\n    } catch (error) {\n      if (error instanceof InteractionRequiredAuthError) {\n        response = await instance.loginPopup({\n          scopes: ['Tasks.ReadWrite'],\n        });\n        instance.setActiveAccount(response.account);\n      } else {\n        console.error('Error acquiring token:', error);\n        return;\n      }\n    }\n\n    await fetch(`https://graph.microsoft.com/v1.0/me/todo/lists/${listId}/tasks/${taskId}`, {\n      method: 'PATCH',\n      headers: {\n        Authorization: `Bearer ${response.accessToken}`,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ status: 'completed' }),\n    });\n  };\n\n  const handleTitleChange = (taskId, newTitle) => {\n    setEditedTitles((prev) => ({ ...prev, [taskId]: newTitle }));\n  };\n\n  const handleTitleBlur = async (taskId) => {\n    const newTitle = editedTitles[taskId];\n    if (!newTitle) return;\n\n    const account = instance.getActiveAccount();\n    if (!account) return;\n\n    let response;\n    try {\n      response = await instance.acquireTokenSilent({\n        scopes: ['Tasks.ReadWrite'],\n        account,\n      });\n    } catch (error) {\n      if (error instanceof InteractionRequiredAuthError) {\n        response = await instance.loginPopup({\n          scopes: ['Tasks.ReadWrite'],\n        });\n        instance.setActiveAccount(response.account);\n      } else {\n        console.error('Error acquiring token:', error);\n        return;\n      }\n    }\n\n    await fetch(`https://graph.microsoft.com/v1.0/me/todo/lists/${listId}/tasks/${taskId}`, {\n      method: 'PATCH',\n      headers: {\n        Authorization: `Bearer ${response.accessToken}`,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ title: newTitle }),\n    });\n\n    setEditedTitles((prev) => {\n      const updated = { ...prev };\n      delete updated[taskId];\n      return updated;\n    });\n  };\n\n  const incompleteTasks = tasks\n    .filter((task) => task.status !== 'completed')\n    .sort((a, b) => {\n      const aTitle = a.title || '';\n      const bTitle = b.title || '';\n      const aIsBottom = aTitle.startsWith('🕳️');\n      const bIsBottom = bTitle.startsWith('🕳️');\n      if (aIsBottom && !bIsBottom) return 1;\n      if (!aIsBottom && bIsBottom) return -1;\n      return aTitle.localeCompare(bTitle);\n    });\n\n  return (\n    <div>\n      {incompleteTasks.length === 0 ? (\n        <p style={{ fontSize: '0.8rem' }}>No tasks found.</p>\n      ) : (\n        <ul style={{ fontSize: '0.8rem' }}>\n          {incompleteTasks.map((task) => (\n            <li key={task.id}>\n              <input\n                type=\"checkbox\"\n                onChange={() => handleCompleteTask(task.id)}\n                style={{ marginRight: '6px' }}\n              />\n              <input\n                type=\"text\"\n                value={editedTitles[task.id] ?? task.title}\n                onChange={(e) => handleTitleChange(task.id, e.target.value)}\n                onBlur={() => handleTitleBlur(task.id)}\n                style={{ fontSize: '0.8rem', width: '80%' }}\n              />\n            </li>\n          ))}\n        </ul>\n      )}\n      <input\n        type=\"text\"\n        value={newTask}\n        onChange={(e) => setNewTask(e.target.value)}\n        onKeyDown={(e) => e.key === 'Enter' && handleAddTask()}\n        placeholder=\"Add new task\"\n        style={{ width: '100%', marginTop: '8px', fontSize: '0.8rem' }}\n      />\n    </div>\n  );\n};\n\nexport default TaskPanel;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}