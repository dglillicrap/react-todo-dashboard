{"ast":null,"code":"var _jsxFileName = \"C:\\\\_Projects\\\\DGL_ToDo\\\\react_todo_dashboard2\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport TaskPanel from './TaskPanel';\nimport PreviewPanel from './PreviewPanel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultLists = ['Work', 'Personal', 'Errands', 'Ideas', 'Projects', 'Misc'];\nexport default function App() {\n  _s();\n  const [group, setGroup] = useState('Group 1');\n  const [panelLists, setPanelLists] = useState(defaultLists);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const handleSaveGroup = () => {\n    localStorage.setItem(group, JSON.stringify(panelLists));\n    alert(`Saved current setup for ${group}`);\n  };\n  const handleListChange = (index, newList) => {\n    const updatedLists = [...panelLists];\n    updatedLists[index] = newList;\n    setPanelLists(updatedLists);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top-left\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogin,\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSaveSetup,\n          children: \"Save Current Setup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: group,\n        onChange: e => setGroup(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Group 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Group 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Group 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSaveGroup,\n        children: \"Save Current Setup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel-grid\",\n      children: panelLists.map((listName, index) => index === 5 ? /*#__PURE__*/_jsxDEV(PreviewPanel, {\n        task: selectedTask\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(TaskPanel, {\n        listName: listName,\n        onListChange: newList => handleListChange(index, newList),\n        onTaskSelect: setSelectedTask\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Hzj6z5shwV6yk30yNYmq+5Vt41k=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","TaskPanel","PreviewPanel","jsxDEV","_jsxDEV","defaultLists","App","_s","group","setGroup","panelLists","setPanelLists","selectedTask","setSelectedTask","handleSaveGroup","localStorage","setItem","JSON","stringify","alert","handleListChange","index","newList","updatedLists","className","children","onClick","handleLogin","fileName","_jsxFileName","lineNumber","columnNumber","handleSaveSetup","value","onChange","e","target","map","listName","task","onListChange","onTaskSelect","_c","$RefreshReg$"],"sources":["C:/_Projects/DGL_ToDo/react_todo_dashboard2/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport TaskPanel from './TaskPanel';\nimport PreviewPanel from './PreviewPanel';\n\nconst defaultLists = ['Work', 'Personal', 'Errands', 'Ideas', 'Projects', 'Misc'];\n\nexport default function App() {\n  const [group, setGroup] = useState('Group 1');\n  const [panelLists, setPanelLists] = useState(defaultLists);\n  const [selectedTask, setSelectedTask] = useState(null);\n\n  const handleSaveGroup = () => {\n    localStorage.setItem(group, JSON.stringify(panelLists));\n    alert(`Saved current setup for ${group}`);\n  };\n\n  const handleListChange = (index, newList) => {\n    const updatedLists = [...panelLists];\n    updatedLists[index] = newList;\n    setPanelLists(updatedLists);\n  };\n\n  return (\n    <div className=\"dashboard\">\n      <div className=\"top-bar\">\n        <div className=\"top-left\">\n          <button onClick={handleLogin}>Sign In</button>\n        </div>\n        <div className=\"top-center\">\n          <button onClick={handleSaveSetup}>Save Current Setup</button>\n        </div>\n        <select value={group} onChange={(e) => setGroup(e.target.value)}>\n          <option>Group 1</option>\n          <option>Group 2</option>\n          <option>Group 3</option>\n        </select>\n        <button onClick={handleSaveGroup}>Save Current Setup</button>\n      </div>\n      <div className=\"panel-grid\">\n        {panelLists.map((listName, index) =>\n          index === 5 ? (\n            <PreviewPanel key={index} task={selectedTask} />\n          ) : (\n            <TaskPanel\n              key={index}\n              listName={listName}\n              onListChange={(newList) => handleListChange(index, newList)}\n              onTaskSelect={setSelectedTask}\n            />\n          )\n        )}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}