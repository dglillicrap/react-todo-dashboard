{"ast":null,"code":"var _jsxFileName = \"C:\\\\_Projects\\\\DGL_ToDo\\\\react_todo_dashboard2\\\\src\\\\components\\\\PreviewPanel.jsx\",\n  _s = $RefreshSig$();\n// src/components/PreviewPanel.jsx\nimport React, { useEffect, useState } from 'react';\nimport { useMsal } from '@azure/msal-react';\nimport { InteractionRequiredAuthError } from '@azure/msal-browser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PreviewPanel({\n  task,\n  listId,\n  onTaskTitleUpdate\n}) {\n  _s();\n  const {\n    instance\n  } = useMsal();\n  const [steps, setSteps] = useState([]);\n  const [newStep, setNewStep] = useState('');\n  const [notes, setNotes] = useState('');\n  const [editingTitle, setEditingTitle] = useState(false);\n  const [editedTitle, setEditedTitle] = useState('');\n  const getToken = async () => {\n    const account = instance.getActiveAccount();\n    if (!account) return null;\n    try {\n      return await instance.acquireTokenSilent({\n        scopes: ['Tasks.ReadWrite'],\n        account\n      });\n    } catch (error) {\n      if (error instanceof InteractionRequiredAuthError) {\n        const response = await instance.loginPopup({\n          scopes: ['Tasks.ReadWrite']\n        });\n        instance.setActiveAccount(response.account);\n        return response;\n      } else {\n        console.error('Token acquisition failed:', error);\n        return null;\n      }\n    }\n  };\n  useEffect(() => {\n    const fetchStepsAndNotes = async () => {\n      var _taskData$body;\n      if (!task || !listId) return;\n      const account = instance.getActiveAccount();\n      if (!account) return;\n      const response = await instance.acquireTokenSilent({\n        scopes: ['Tasks.Read'],\n        account\n      });\n      const stepsRes = await fetch(`https://graph.microsoft.com/v1.0/me/todo/lists/${listId}/tasks/${task.id}/checklistItems`, {\n        headers: {\n          Authorization: `Bearer ${response.accessToken}`\n        }\n      });\n      const stepsData = await stepsRes.json();\n      const sortedSteps = (stepsData.value || []).filter(step => !step.isChecked).sort((a, b) => {\n        const aTitle = a.displayName || '';\n        const bTitle = b.displayName || '';\n        const aIsBottom = aTitle.startsWith('🕳️');\n        const bIsBottom = bTitle.startsWith('🕳️');\n        if (aIsBottom && !bIsBottom) return 1;\n        if (!aIsBottom && bIsBottom) return -1;\n        return aTitle.localeCompare(bTitle);\n      });\n      setSteps(sortedSteps);\n      const taskRes = await fetch(`https://graph.microsoft.com/v1.0/me/todo/lists/${listId}/tasks/${task.id}`, {\n        headers: {\n          Authorization: `Bearer ${response.accessToken}`\n        }\n      });\n      const taskData = await taskRes.json();\n      setNotes(((_taskData$body = taskData.body) === null || _taskData$body === void 0 ? void 0 : _taskData$body.content) || '');\n      setEditedTitle(taskData.title || '');\n    };\n    fetchStepsAndNotes();\n  }, [task, listId, instance]);\n  const handleAddStep = async () => {\n    if (!newStep.trim() || !task || !listId) return;\n    const response = await getToken();\n    if (!response) return;\n    const res = await fetch(`https://graph.microsoft.com/v1.0/me/todo/lists/${listId}/tasks/${task.id}/checklistItems`, {\n      method: 'POST',\n      headers: {\n        Authorization: `Bearer ${response.accessToken}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        displayName: newStep\n      })\n    });\n    const newItem = await res.json();\n    const updatedSteps = [...steps, newItem].sort((a, b) => {\n      const aTitle = a.displayName || '';\n      const bTitle = b.displayName || '';\n      const aIsBottom = aTitle.startsWith('🕳️');\n      const bIsBottom = bTitle.startsWith('🕳️');\n      if (aIsBottom && !bIsBottom) return 1;\n      if (!aIsBottom && bIsBottom) return -1;\n      return aTitle.localeCompare(bTitle);\n    });\n    setSteps(updatedSteps);\n    setNewStep('');\n  };\n\n  // Local update only (no network)\n  const updateStepNameLocal = (stepId, newName) => {\n    setSteps(prev => prev.map(step => step.id === stepId ? {\n      ...step,\n      displayName: newName\n    } : step));\n  };\n\n  // Commit to Graph on blur/Enter using the current local value\n  const commitStepName = async stepId => {\n    const response = await getToken();\n    if (!response) return;\n    const step = steps.find(s => s.id === stepId);\n    if (!step) return;\n    await fetch(`https://graph.microsoft.com/v1.0/me/todo/lists/${listId}/tasks/${task.id}/checklistItems/${stepId}`, {\n      method: 'PATCH',\n      headers: {\n        Authorization: `Bearer ${response.accessToken}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        displayName: step.displayName\n      })\n    });\n  };\n  const updateTaskTitle = async () => {\n    const response = await getToken();\n    if (!response) return;\n    await fetch(`https://graph.microsoft.com/v1.0/me/todo/lists/${listId}/tasks/${task.id}`, {\n      method: 'PATCH',\n      headers: {\n        Authorization: `Bearer ${response.accessToken}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        title: editedTitle\n      })\n    });\n    setEditingTitle(false);\n    if (typeof onTaskTitleUpdate === 'function') {\n      onTaskTitleUpdate(task.id, editedTitle);\n    }\n  };\n  const updateTaskNotes = async () => {\n    const response = await getToken();\n    if (!response) return;\n    await fetch(`https://graph.microsoft.com/v1.0/me/todo/lists/${listId}/tasks/${task.id}`, {\n      method: 'PATCH',\n      headers: {\n        Authorization: `Bearer ${response.accessToken}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        body: {\n          contentType: 'text',\n          content: notes\n        }\n      })\n    });\n  };\n  if (!task) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Select a task to preview\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        fontSize: '0.9rem',\n        marginBottom: '4px'\n      },\n      children: \"Task Pane\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), editingTitle ? /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: editedTitle,\n      onChange: e => setEditedTitle(e.target.value),\n      onBlur: updateTaskTitle,\n      style: {\n        fontSize: '0.8rem',\n        width: '100%',\n        marginBottom: '6px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n      style: {\n        fontSize: '0.8rem',\n        cursor: 'pointer',\n        marginBottom: '6px'\n      },\n      onClick: () => setEditingTitle(true),\n      children: editedTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        fontSize: '0.8rem'\n      },\n      children: steps.map(step => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: step.displayName,\n          onChange: e => updateStepName(step.id, e.target.value),\n          style: {\n            fontSize: '0.8rem',\n            width: '90%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this)\n      }, step.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: step.displayName,\n      onChange: e => updateStepNameLocal(step.id, e.target.value),\n      onBlur: () => commitStepName(step.id),\n      onKeyDown: e => {\n        if (e.key === 'Enter') {\n          e.preventDefault();\n          e.currentTarget.blur(); // triggers commit onBlur\n        }\n      },\n      style: {\n        fontSize: '0.8rem',\n        width: '90%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: notes,\n      onChange: e => setNotes(e.target.value),\n      onBlur: updateTaskNotes,\n      placeholder: \"Task notes\",\n      style: {\n        width: '100%',\n        marginTop: '8px',\n        fontSize: '0.8rem',\n        height: '60px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 5\n  }, this);\n}\n_s(PreviewPanel, \"qeKVhio3M2A5PEWnREuD8DOpjlo=\", false, function () {\n  return [useMsal];\n});\n_c = PreviewPanel;\nvar _c;\n$RefreshReg$(_c, \"PreviewPanel\");","map":{"version":3,"names":["React","useEffect","useState","useMsal","InteractionRequiredAuthError","jsxDEV","_jsxDEV","PreviewPanel","task","listId","onTaskTitleUpdate","_s","instance","steps","setSteps","newStep","setNewStep","notes","setNotes","editingTitle","setEditingTitle","editedTitle","setEditedTitle","getToken","account","getActiveAccount","acquireTokenSilent","scopes","error","response","loginPopup","setActiveAccount","console","fetchStepsAndNotes","_taskData$body","stepsRes","fetch","id","headers","Authorization","accessToken","stepsData","json","sortedSteps","value","filter","step","isChecked","sort","a","b","aTitle","displayName","bTitle","aIsBottom","startsWith","bIsBottom","localeCompare","taskRes","taskData","body","content","title","handleAddStep","trim","res","method","JSON","stringify","newItem","updatedSteps","updateStepNameLocal","stepId","newName","prev","map","commitStepName","find","s","updateTaskTitle","updateTaskNotes","contentType","children","fileName","_jsxFileName","lineNumber","columnNumber","style","fontSize","marginBottom","type","onChange","e","target","onBlur","width","cursor","onClick","updateStepName","onKeyDown","key","preventDefault","currentTarget","blur","placeholder","marginTop","height","_c","$RefreshReg$"],"sources":["C:/_Projects/DGL_ToDo/react_todo_dashboard2/src/components/PreviewPanel.jsx"],"sourcesContent":["// src/components/PreviewPanel.jsx\nimport React, { useEffect, useState } from 'react';\nimport { useMsal } from '@azure/msal-react';\nimport { InteractionRequiredAuthError } from '@azure/msal-browser';\n\nexport default function PreviewPanel({ task, listId, onTaskTitleUpdate }) {\n  const { instance } = useMsal();\n  const [steps, setSteps] = useState([]);\n  const [newStep, setNewStep] = useState('');\n  const [notes, setNotes] = useState('');\n  const [editingTitle, setEditingTitle] = useState(false);\n  const [editedTitle, setEditedTitle] = useState('');\n\n  const getToken = async () => {\n    const account = instance.getActiveAccount();\n    if (!account) return null;\n\n    try {\n      return await instance.acquireTokenSilent({\n        scopes: ['Tasks.ReadWrite'],\n        account,\n      });\n    } catch (error) {\n      if (error instanceof InteractionRequiredAuthError) {\n        const response = await instance.loginPopup({\n          scopes: ['Tasks.ReadWrite'],\n        });\n        instance.setActiveAccount(response.account);\n        return response;\n      } else {\n        console.error('Token acquisition failed:', error);\n        return null;\n      }\n    }\n  };\n\n  useEffect(() => {\n    const fetchStepsAndNotes = async () => {\n      if (!task || !listId) return;\n\n      const account = instance.getActiveAccount();\n      if (!account) return;\n\n      const response = await instance.acquireTokenSilent({\n        scopes: ['Tasks.Read'],\n        account,\n      });\n\n      const stepsRes = await fetch(\n        `https://graph.microsoft.com/v1.0/me/todo/lists/${listId}/tasks/${task.id}/checklistItems`,\n        {\n          headers: {\n            Authorization: `Bearer ${response.accessToken}`,\n          },\n        }\n      );\n      const stepsData = await stepsRes.json();\n      const sortedSteps = (stepsData.value || [])\n        .filter((step) => !step.isChecked)\n        .sort((a, b) => {\n          const aTitle = a.displayName || '';\n          const bTitle = b.displayName || '';\n          const aIsBottom = aTitle.startsWith('🕳️');\n          const bIsBottom = bTitle.startsWith('🕳️');\n          if (aIsBottom && !bIsBottom) return 1;\n          if (!aIsBottom && bIsBottom) return -1;\n          return aTitle.localeCompare(bTitle);\n        });\n      setSteps(sortedSteps);\n\n      const taskRes = await fetch(\n        `https://graph.microsoft.com/v1.0/me/todo/lists/${listId}/tasks/${task.id}`,\n        {\n          headers: {\n            Authorization: `Bearer ${response.accessToken}`,\n          },\n        }\n      );\n      const taskData = await taskRes.json();\n      setNotes(taskData.body?.content || '');\n      setEditedTitle(taskData.title || '');\n    };\n\n    fetchStepsAndNotes();\n  }, [task, listId, instance]);\n\n  const handleAddStep = async () => {\n    if (!newStep.trim() || !task || !listId) return;\n\n    const response = await getToken();\n    if (!response) return;\n\n    const res = await fetch(\n      `https://graph.microsoft.com/v1.0/me/todo/lists/${listId}/tasks/${task.id}/checklistItems`,\n      {\n        method: 'POST',\n        headers: {\n          Authorization: `Bearer ${response.accessToken}`,\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ displayName: newStep }),\n      }\n    );\n\n    const newItem = await res.json();\n    const updatedSteps = [...steps, newItem].sort((a, b) => {\n      const aTitle = a.displayName || '';\n      const bTitle = b.displayName || '';\n      const aIsBottom = aTitle.startsWith('🕳️');\n      const bIsBottom = bTitle.startsWith('🕳️');\n      if (aIsBottom && !bIsBottom) return 1;\n      if (!aIsBottom && bIsBottom) return -1;\n      return aTitle.localeCompare(bTitle);\n    });\n    setSteps(updatedSteps);\n    setNewStep('');\n  };\n\n// Local update only (no network)\nconst updateStepNameLocal = (stepId, newName) => {\n  setSteps(prev =>\n    prev.map(step =>\n      step.id === stepId ? { ...step, displayName: newName } : step\n    )\n  );\n};\n\n// Commit to Graph on blur/Enter using the current local value\nconst commitStepName = async (stepId) => {\n  const response = await getToken();\n  if (!response) return;\n\n  const step = steps.find(s => s.id === stepId);\n  if (!step) return;\n\n  await fetch(\n    `https://graph.microsoft.com/v1.0/me/todo/lists/${listId}/tasks/${task.id}/checklistItems/${stepId}`,\n    {\n      method: 'PATCH',\n      headers: {\n        Authorization: `Bearer ${response.accessToken}`,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ displayName: step.displayName }),\n    }\n  );\n};\n\n  const updateTaskTitle = async () => {\n    const response = await getToken();\n    if (!response) return;\n\n    await fetch(\n      `https://graph.microsoft.com/v1.0/me/todo/lists/${listId}/tasks/${task.id}`,\n      {\n        method: 'PATCH',\n        headers: {\n          Authorization: `Bearer ${response.accessToken}`,\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ title: editedTitle }),\n      }\n    );\n\n    setEditingTitle(false);\n    if (typeof onTaskTitleUpdate === 'function') {\n      onTaskTitleUpdate(task.id, editedTitle);\n    }\n  };\n\n  const updateTaskNotes = async () => {\n    const response = await getToken();\n    if (!response) return;\n\n    await fetch(\n      `https://graph.microsoft.com/v1.0/me/todo/lists/${listId}/tasks/${task.id}`,\n      {\n        method: 'PATCH',\n        headers: {\n          Authorization: `Bearer ${response.accessToken}`,\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          body: {\n            contentType: 'text',\n            content: notes,\n          },\n        }),\n      }\n    );\n  };\n\n  if (!task) return <p>Select a task to preview</p>;\n\n  return (\n    <div>\n      <h3 style={{ fontSize: '0.9rem', marginBottom: '4px' }}>Task Pane</h3>\n      {editingTitle ? (\n        <input\n          type=\"text\"\n          value={editedTitle}\n          onChange={(e) => setEditedTitle(e.target.value)}\n          onBlur={updateTaskTitle}\n          style={{ fontSize: '0.8rem', width: '100%', marginBottom: '6px' }}\n        />\n      ) : (\n        <h4\n          style={{ fontSize: '0.8rem', cursor: 'pointer', marginBottom: '6px' }}\n          onClick={() => setEditingTitle(true)}\n        >\n          {editedTitle}\n        </h4>\n      )}\n      <ul style={{ fontSize: '0.8rem' }}>\n        {steps.map((step) => (\n          <li key={step.id}>\n            <input\n              type=\"text\"\n              value={step.displayName}\n              onChange={(e) => updateStepName(step.id, e.target.value)}\n              style={{ fontSize: '0.8rem', width: '90%' }}\n            />\n          </li>\n        ))}\n      </ul>\n \n     <input\n       type=\"text\"\n       value={step.displayName}\n       onChange={(e) => updateStepNameLocal(step.id, e.target.value)}\n       onBlur={() => commitStepName(step.id)}\n       onKeyDown={(e) => {\n         if (e.key === 'Enter') {\n           e.preventDefault();\n           e.currentTarget.blur(); // triggers commit onBlur\n         }\n       }}\n       style={{ fontSize: '0.8rem', width: '90%' }}\n     />\n\n      <textarea\n        value={notes}\n        onChange={(e) => setNotes(e.target.value)}\n        onBlur={updateTaskNotes}\n        placeholder=\"Task notes\"\n        style={{ width: '100%', marginTop: '8px', fontSize: '0.8rem', height: '60px' }}\n      />\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}