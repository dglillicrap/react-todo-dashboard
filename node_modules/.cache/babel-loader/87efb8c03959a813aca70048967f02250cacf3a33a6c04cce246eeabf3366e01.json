{"ast":null,"code":"var _jsxFileName = \"C:\\\\_Projects\\\\DGL_ToDo\\\\react_todo_dashboard2\\\\src\\\\TaskPanel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskPanel({\n  listName,\n  onListChange,\n  onTaskSelect\n}) {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n  const handleAddTask = () => {\n    if (newTask.trim()) {\n      setTasks([...tasks, {\n        title: newTask,\n        done: false,\n        steps: []\n      }]);\n      setNewTask('');\n    }\n  };\n  const toggleTask = index => {\n    const updated = [...tasks];\n    updated[index].done = !updated[index].done;\n    setTasks(updated);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      value: listName,\n      onChange: e => onListChange(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"Work\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"Personal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"Errands\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"Ideas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"Misc\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map((task, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => onTaskSelect(task),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: task.done,\n          onChange: () => toggleTask(idx)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), task.title]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Add task...\",\n      value: newTask,\n      onChange: e => setNewTask(e.target.value),\n      onKeyDown: e => e.key === 'Enter' && handleAddTask()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskPanel, \"MMRu7H+sKP7rEuK8M8zT6HaT89w=\");\n_c = TaskPanel;\nvar _c;\n$RefreshReg$(_c, \"TaskPanel\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TaskPanel","listName","onListChange","onTaskSelect","_s","tasks","setTasks","newTask","setNewTask","handleAddTask","trim","title","done","steps","toggleTask","index","updated","className","children","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","map","task","idx","onClick","type","checked","placeholder","onKeyDown","key","_c","$RefreshReg$"],"sources":["C:/_Projects/DGL_ToDo/react_todo_dashboard2/src/TaskPanel.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nexport default function TaskPanel({ listName, onListChange, onTaskSelect }) {\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n\n  const handleAddTask = () => {\n    if (newTask.trim()) {\n      setTasks([...tasks, { title: newTask, done: false, steps: [] }]);\n      setNewTask('');\n    }\n  };\n\n  const toggleTask = (index) => {\n    const updated = [...tasks];\n    updated[index].done = !updated[index].done;\n    setTasks(updated);\n  };\n\n  return (\n    <div className=\"panel\">\n      <select value={listName} onChange={(e) => onListChange(e.target.value)}>\n        <option>Work</option>\n        <option>Personal</option>\n        <option>Errands</option>\n        <option>Ideas</option>\n        <option>Projects</option>\n        <option>Misc</option>\n      </select>\n      <ul>\n        {tasks.map((task, idx) => (\n          <li key={idx} onClick={() => onTaskSelect(task)}>\n            <input\n              type=\"checkbox\"\n              checked={task.done}\n              onChange={() => toggleTask(idx)}\n            />\n            {task.title}\n          </li>\n        ))}\n      </ul>\n      <input\n        type=\"text\"\n        placeholder=\"Add task...\"\n        value={newTask}\n        onChange={(e) => setNewTask(e.target.value)}\n        onKeyDown={(e) => e.key === 'Enter' && handleAddTask()}\n      />\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}