{"ast":null,"code":"var _s = $RefreshSig$();\n// src/hooks/useTaskLists.js\nimport { useMsal } from '@azure/msal-react';\nimport { useEffect, useState } from 'react';\nconst useTaskLists = () => {\n  _s();\n  const {\n    instance\n  } = useMsal();\n  const [taskLists, setTaskLists] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchTaskLists = async () => {\n      try {\n        const account = instance.getActiveAccount();\n        const response = await instance.acquireTokenSilent({\n          scopes: ['Tasks.Read'],\n          account\n        });\n        const res = await fetch('https://graph.microsoft.com/v1.0/me/todo/lists', {\n          headers: {\n            Authorization: `Bearer ${response.accessToken}`\n          }\n        });\n        const data = await res.json();\n        setTaskLists(data.value || []);\n      } catch (error) {\n        console.error('Error fetching task lists:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTaskLists();\n  }, [instance]);\n  return {\n    taskLists,\n    loading\n  };\n};\n_s(useTaskLists, \"9ijF90vO0fH6F0RjAq8brL+y9/c=\", false, function () {\n  return [useMsal];\n});\nexport default useTaskLists;","map":{"version":3,"names":["useMsal","useEffect","useState","useTaskLists","_s","instance","taskLists","setTaskLists","loading","setLoading","fetchTaskLists","account","getActiveAccount","response","acquireTokenSilent","scopes","res","fetch","headers","Authorization","accessToken","data","json","value","error","console"],"sources":["C:/_Projects/DGL_ToDo/react_todo_dashboard2/src/hooks/useTaskLists.js"],"sourcesContent":["// src/hooks/useTaskLists.js\r\nimport { useMsal } from '@azure/msal-react';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst useTaskLists = () => {\r\n  const { instance } = useMsal();\r\n  const [taskLists, setTaskLists] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchTaskLists = async () => {\r\n      try {\r\n        const account = instance.getActiveAccount();\r\n        const response = await instance.acquireTokenSilent({\r\n          scopes: ['Tasks.Read'],\r\n          account,\r\n        });\r\n\r\n        const res = await fetch('https://graph.microsoft.com/v1.0/me/todo/lists', {\r\n          headers: {\r\n            Authorization: `Bearer ${response.accessToken}`,\r\n          },\r\n        });\r\n\r\n        const data = await res.json();\r\n        setTaskLists(data.value || []);\r\n      } catch (error) {\r\n        console.error('Error fetching task lists:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchTaskLists();\r\n  }, [instance]);\r\n\r\n  return { taskLists, loading };\r\n};\r\n\r\nexport default useTaskLists;\r\n"],"mappings":";AAAA;AACA,SAASA,OAAO,QAAQ,mBAAmB;AAC3C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM;IAAEC;EAAS,CAAC,GAAGL,OAAO,CAAC,CAAC;EAC9B,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMS,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,OAAO,GAAGN,QAAQ,CAACO,gBAAgB,CAAC,CAAC;QAC3C,MAAMC,QAAQ,GAAG,MAAMR,QAAQ,CAACS,kBAAkB,CAAC;UACjDC,MAAM,EAAE,CAAC,YAAY,CAAC;UACtBJ;QACF,CAAC,CAAC;QAEF,MAAMK,GAAG,GAAG,MAAMC,KAAK,CAAC,gDAAgD,EAAE;UACxEC,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUN,QAAQ,CAACO,WAAW;UAC/C;QACF,CAAC,CAAC;QAEF,MAAMC,IAAI,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,CAAC;QAC7Bf,YAAY,CAACc,IAAI,CAACE,KAAK,IAAI,EAAE,CAAC;MAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD,CAAC,SAAS;QACRf,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDC,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACL,QAAQ,CAAC,CAAC;EAEd,OAAO;IAAEC,SAAS;IAAEE;EAAQ,CAAC;AAC/B,CAAC;AAACJ,EAAA,CAjCID,YAAY;EAAA,QACKH,OAAO;AAAA;AAkC9B,eAAeG,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}