{"ast":null,"code":"/*! @azure/msal-browser v4.24.1 2025-09-30 */\n'use strict';\n\nimport { DEFAULT_CRYPTO_IMPLEMENTATION, buildStaticAuthorityOptions, PerformanceEvents, TimeUtils, AuthError, OIDC_DEFAULT_SCOPES, AccountEntity } from '@azure/msal-common/browser';\nimport { InteractionType, CacheLookupPolicy, DEFAULT_REQUEST } from '../utils/BrowserConstants.mjs';\nimport { CryptoOps } from '../crypto/CryptoOps.mjs';\nimport { NestedAppAuthAdapter } from '../naa/mapping/NestedAppAuthAdapter.mjs';\nimport { NestedAppAuthError } from '../error/NestedAppAuthError.mjs';\nimport { EventHandler } from '../event/EventHandler.mjs';\nimport { EventType } from '../event/EventType.mjs';\nimport { BrowserCacheManager, DEFAULT_BROWSER_CACHE_MANAGER } from '../cache/BrowserCacheManager.mjs';\nimport { getAccount, getAllAccounts, getAccountByUsername, getAccountByHomeId, getAccountByLocalId, setActiveAccount, getActiveAccount } from '../cache/AccountManager.mjs';\nimport { createNewGuid } from '../crypto/BrowserCrypto.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\nclass NestedAppAuthController {\n  constructor(operatingContext) {\n    this.operatingContext = operatingContext;\n    const proxy = this.operatingContext.getBridgeProxy();\n    if (proxy !== undefined) {\n      this.bridgeProxy = proxy;\n    } else {\n      throw new Error(\"unexpected: bridgeProxy is undefined\");\n    }\n    // Set the configuration.\n    this.config = operatingContext.getConfig();\n    // Initialize logger\n    this.logger = this.operatingContext.getLogger();\n    // Initialize performance client\n    this.performanceClient = this.config.telemetry.client;\n    // Initialize the crypto class.\n    this.browserCrypto = operatingContext.isBrowserEnvironment() ? new CryptoOps(this.logger, this.performanceClient, true) : DEFAULT_CRYPTO_IMPLEMENTATION;\n    this.eventHandler = new EventHandler(this.logger);\n    // Initialize the browser storage class.\n    this.browserStorage = this.operatingContext.isBrowserEnvironment() ? new BrowserCacheManager(this.config.auth.clientId, this.config.cache, this.browserCrypto, this.logger, this.performanceClient, this.eventHandler, buildStaticAuthorityOptions(this.config.auth)) : DEFAULT_BROWSER_CACHE_MANAGER(this.config.auth.clientId, this.logger, this.performanceClient, this.eventHandler);\n    this.nestedAppAuthAdapter = new NestedAppAuthAdapter(this.config.auth.clientId, this.config.auth.clientCapabilities, this.browserCrypto, this.logger);\n    // Set the active account if available\n    const accountContext = this.bridgeProxy.getAccountContext();\n    this.currentAccountContext = accountContext ? accountContext : null;\n  }\n  /**\r\n   * Factory function to create a new instance of NestedAppAuthController\r\n   * @param operatingContext\r\n   * @returns Promise<IController>\r\n   */\n  static async createController(operatingContext) {\n    const controller = new NestedAppAuthController(operatingContext);\n    return Promise.resolve(controller);\n  }\n  /**\r\n   * Specific implementation of initialize function for NestedAppAuthController\r\n   * @returns\r\n   */\n  async initialize(request,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  isBroker) {\n    const initCorrelationId = request?.correlationId || createNewGuid();\n    await this.browserStorage.initialize(initCorrelationId);\n    return Promise.resolve();\n  }\n  /**\r\n   * Validate the incoming request and add correlationId if not present\r\n   * @param request\r\n   * @returns\r\n   */\n  ensureValidRequest(request) {\n    if (request?.correlationId) {\n      return request;\n    }\n    return {\n      ...request,\n      correlationId: this.browserCrypto.createNewGuid()\n    };\n  }\n  /**\r\n   * Internal implementation of acquireTokenInteractive flow\r\n   * @param request\r\n   * @returns\r\n   */\n  async acquireTokenInteractive(request) {\n    const validRequest = this.ensureValidRequest(request);\n    this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_START, InteractionType.Popup, validRequest);\n    const atPopupMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.AcquireTokenPopup, validRequest.correlationId);\n    atPopupMeasurement.add({\n      nestedAppAuthRequest: true\n    });\n    try {\n      const naaRequest = this.nestedAppAuthAdapter.toNaaTokenRequest(validRequest);\n      const reqTimestamp = TimeUtils.nowSeconds();\n      const response = await this.bridgeProxy.getTokenInteractive(naaRequest);\n      const result = {\n        ...this.nestedAppAuthAdapter.fromNaaTokenResponse(naaRequest, response, reqTimestamp)\n      };\n      // cache the tokens in the response\n      try {\n        // cache hydration can fail in JS Runtime scenario that doesn't support full crypto API\n        await this.hydrateCache(result, request);\n      } catch (error) {\n        this.logger.warningPii(`Failed to hydrate cache. Error: ${error}`, validRequest.correlationId);\n      }\n      // cache the account context in memory after successful token fetch\n      this.currentAccountContext = {\n        homeAccountId: result.account.homeAccountId,\n        environment: result.account.environment,\n        tenantId: result.account.tenantId\n      };\n      this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_SUCCESS, InteractionType.Popup, result);\n      atPopupMeasurement.add({\n        accessTokenSize: result.accessToken.length,\n        idTokenSize: result.idToken.length\n      });\n      atPopupMeasurement.end({\n        success: true,\n        requestId: result.requestId\n      }, undefined, result.account);\n      return result;\n    } catch (e) {\n      const error = e instanceof AuthError ? e : this.nestedAppAuthAdapter.fromBridgeError(e);\n      this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_FAILURE, InteractionType.Popup, null, e);\n      atPopupMeasurement.end({\n        success: false\n      }, e, request.account);\n      throw error;\n    }\n  }\n  /**\r\n   * Internal implementation of acquireTokenSilent flow\r\n   * @param request\r\n   * @returns\r\n   */\n  async acquireTokenSilentInternal(request) {\n    const validRequest = this.ensureValidRequest(request);\n    this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_START, InteractionType.Silent, validRequest);\n    // Look for tokens in the cache first\n    const result = await this.acquireTokenFromCache(validRequest);\n    if (result) {\n      this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_SUCCESS, InteractionType.Silent, result);\n      return result;\n    }\n    // proceed with acquiring tokens via the host\n    const ssoSilentMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.SsoSilent, validRequest.correlationId);\n    ssoSilentMeasurement.increment({\n      visibilityChangeCount: 0\n    });\n    ssoSilentMeasurement.add({\n      nestedAppAuthRequest: true\n    });\n    try {\n      const naaRequest = this.nestedAppAuthAdapter.toNaaTokenRequest(validRequest);\n      naaRequest.forceRefresh = validRequest.forceRefresh;\n      const reqTimestamp = TimeUtils.nowSeconds();\n      const response = await this.bridgeProxy.getTokenSilent(naaRequest);\n      const result = this.nestedAppAuthAdapter.fromNaaTokenResponse(naaRequest, response, reqTimestamp);\n      // cache the tokens in the response\n      try {\n        // cache hydration can fail in JS Runtime scenario that doesn't support full crypto API\n        await this.hydrateCache(result, request);\n      } catch (error) {\n        this.logger.warningPii(`Failed to hydrate cache. Error: ${error}`, validRequest.correlationId);\n      }\n      // cache the account context in memory after successful token fetch\n      this.currentAccountContext = {\n        homeAccountId: result.account.homeAccountId,\n        environment: result.account.environment,\n        tenantId: result.account.tenantId\n      };\n      this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_SUCCESS, InteractionType.Silent, result);\n      ssoSilentMeasurement?.add({\n        accessTokenSize: result.accessToken.length,\n        idTokenSize: result.idToken.length\n      });\n      ssoSilentMeasurement?.end({\n        success: true,\n        requestId: result.requestId\n      }, undefined, result.account);\n      return result;\n    } catch (e) {\n      const error = e instanceof AuthError ? e : this.nestedAppAuthAdapter.fromBridgeError(e);\n      this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_FAILURE, InteractionType.Silent, null, e);\n      ssoSilentMeasurement?.end({\n        success: false\n      }, e, request.account);\n      throw error;\n    }\n  }\n  /**\r\n   * acquires tokens from cache\r\n   * @param request\r\n   * @returns\r\n   */\n  async acquireTokenFromCache(request) {\n    const atsMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.AcquireTokenSilent, request.correlationId);\n    atsMeasurement?.add({\n      nestedAppAuthRequest: true\n    });\n    // if the request has claims, we cannot look up in the cache\n    if (request.claims) {\n      this.logger.verbose(\"Claims are present in the request, skipping cache lookup\");\n      return null;\n    }\n    // if the request has forceRefresh, we cannot look up in the cache\n    if (request.forceRefresh) {\n      this.logger.verbose(\"forceRefresh is set to true, skipping cache lookup\");\n      return null;\n    }\n    // respect cache lookup policy\n    let result = null;\n    if (!request.cacheLookupPolicy) {\n      request.cacheLookupPolicy = CacheLookupPolicy.Default;\n    }\n    switch (request.cacheLookupPolicy) {\n      case CacheLookupPolicy.Default:\n      case CacheLookupPolicy.AccessToken:\n      case CacheLookupPolicy.AccessTokenAndRefreshToken:\n        result = await this.acquireTokenFromCacheInternal(request);\n        break;\n      default:\n        return null;\n    }\n    if (result) {\n      this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_SUCCESS, InteractionType.Silent, result);\n      atsMeasurement.add({\n        accessTokenSize: result.accessToken.length,\n        idTokenSize: result.idToken.length\n      });\n      atsMeasurement.end({\n        success: true\n      }, undefined, result.account);\n      return result;\n    }\n    this.logger.warning(\"Cached tokens are not found for the account, proceeding with silent token request.\");\n    this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_FAILURE, InteractionType.Silent, null);\n    atsMeasurement.end({\n      success: false\n    }, undefined, request.account);\n    return null;\n  }\n  /**\r\n   *\r\n   * @param request\r\n   * @returns\r\n   */\n  async acquireTokenFromCacheInternal(request) {\n    // always prioritize the account context from the bridge\n    const accountContext = this.bridgeProxy.getAccountContext() || this.currentAccountContext;\n    let currentAccount = null;\n    const correlationId = request.correlationId || this.browserCrypto.createNewGuid();\n    if (accountContext) {\n      currentAccount = getAccount(accountContext, this.logger, this.browserStorage, correlationId);\n    }\n    // fall back to brokering if no cached account is found\n    if (!currentAccount) {\n      this.logger.verbose(\"No active account found, falling back to the host\");\n      return Promise.resolve(null);\n    }\n    this.logger.verbose(\"active account found, attempting to acquire token silently\");\n    const authRequest = {\n      ...request,\n      correlationId: request.correlationId || this.browserCrypto.createNewGuid(),\n      authority: request.authority || currentAccount.environment,\n      scopes: request.scopes?.length ? request.scopes : [...OIDC_DEFAULT_SCOPES]\n    };\n    // fetch access token and check for expiry\n    const tokenKeys = this.browserStorage.getTokenKeys();\n    const cachedAccessToken = this.browserStorage.getAccessToken(currentAccount, authRequest, tokenKeys, currentAccount.tenantId);\n    // If there is no access token, log it and return null\n    if (!cachedAccessToken) {\n      this.logger.verbose(\"No cached access token found\");\n      return Promise.resolve(null);\n    } else if (TimeUtils.wasClockTurnedBack(cachedAccessToken.cachedAt) || TimeUtils.isTokenExpired(cachedAccessToken.expiresOn, this.config.system.tokenRenewalOffsetSeconds)) {\n      this.logger.verbose(\"Cached access token has expired\");\n      return Promise.resolve(null);\n    }\n    const cachedIdToken = this.browserStorage.getIdToken(currentAccount, authRequest.correlationId, tokenKeys, currentAccount.tenantId, this.performanceClient);\n    if (!cachedIdToken) {\n      this.logger.verbose(\"No cached id token found\");\n      return Promise.resolve(null);\n    }\n    return this.nestedAppAuthAdapter.toAuthenticationResultFromCache(currentAccount, cachedIdToken, cachedAccessToken, authRequest, authRequest.correlationId);\n  }\n  /**\r\n   * acquireTokenPopup flow implementation\r\n   * @param request\r\n   * @returns\r\n   */\n  async acquireTokenPopup(request) {\n    return this.acquireTokenInteractive(request);\n  }\n  /**\r\n   * acquireTokenRedirect flow is not supported in nested app auth\r\n   * @param request\r\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  acquireTokenRedirect(request) {\n    throw NestedAppAuthError.createUnsupportedError();\n  }\n  /**\r\n   * acquireTokenSilent flow implementation\r\n   * @param silentRequest\r\n   * @returns\r\n   */\n  async acquireTokenSilent(silentRequest) {\n    return this.acquireTokenSilentInternal(silentRequest);\n  }\n  /**\r\n   * Hybrid flow is not currently supported in nested app auth\r\n   * @param request\r\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  acquireTokenByCode(request // eslint-disable-line @typescript-eslint/no-unused-vars\n  ) {\n    throw NestedAppAuthError.createUnsupportedError();\n  }\n  /**\r\n   * acquireTokenNative flow is not currently supported in nested app auth\r\n   * @param request\r\n   * @param apiId\r\n   * @param accountId\r\n   */\n  acquireTokenNative(request, apiId,\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  accountId // eslint-disable-line @typescript-eslint/no-unused-vars\n  ) {\n    throw NestedAppAuthError.createUnsupportedError();\n  }\n  /**\r\n   * acquireTokenByRefreshToken flow is not currently supported in nested app auth\r\n   * @param commonRequest\r\n   * @param silentRequest\r\n   */\n  acquireTokenByRefreshToken(commonRequest,\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  silentRequest // eslint-disable-line @typescript-eslint/no-unused-vars\n  ) {\n    throw NestedAppAuthError.createUnsupportedError();\n  }\n  /**\r\n   * Adds event callbacks to array\r\n   * @param callback\r\n   * @param eventTypes\r\n   */\n  addEventCallback(callback, eventTypes) {\n    return this.eventHandler.addEventCallback(callback, eventTypes);\n  }\n  /**\r\n   * Removes callback with provided id from callback array\r\n   * @param callbackId\r\n   */\n  removeEventCallback(callbackId) {\n    this.eventHandler.removeEventCallback(callbackId);\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  addPerformanceCallback(callback) {\n    throw NestedAppAuthError.createUnsupportedError();\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  removePerformanceCallback(callbackId) {\n    throw NestedAppAuthError.createUnsupportedError();\n  }\n  enableAccountStorageEvents() {\n    throw NestedAppAuthError.createUnsupportedError();\n  }\n  disableAccountStorageEvents() {\n    throw NestedAppAuthError.createUnsupportedError();\n  }\n  // #region Account APIs\n  /**\r\n   * Returns all the accounts in the cache that match the optional filter. If no filter is provided, all accounts are returned.\r\n   * @param accountFilter - (Optional) filter to narrow down the accounts returned\r\n   * @returns Array of AccountInfo objects in cache\r\n   */\n  getAllAccounts(accountFilter) {\n    const correlationId = this.browserCrypto.createNewGuid();\n    return getAllAccounts(this.logger, this.browserStorage, this.isBrowserEnv(), correlationId, accountFilter);\n  }\n  /**\r\n   * Returns the first account found in the cache that matches the account filter passed in.\r\n   * @param accountFilter\r\n   * @returns The first account found in the cache matching the provided filter or null if no account could be found.\r\n   */\n  getAccount(accountFilter) {\n    const correlationId = this.browserCrypto.createNewGuid();\n    return getAccount(accountFilter, this.logger, this.browserStorage, correlationId);\n  }\n  /**\r\n   * Returns the signed in account matching username.\r\n   * (the account object is created at the time of successful login)\r\n   * or null when no matching account is found.\r\n   * This API is provided for convenience but getAccountById should be used for best reliability\r\n   * @param username\r\n   * @returns The account object stored in MSAL\r\n   */\n  getAccountByUsername(username) {\n    const correlationId = this.browserCrypto.createNewGuid();\n    return getAccountByUsername(username, this.logger, this.browserStorage, correlationId);\n  }\n  /**\r\n   * Returns the signed in account matching homeAccountId.\r\n   * (the account object is created at the time of successful login)\r\n   * or null when no matching account is found\r\n   * @param homeAccountId\r\n   * @returns The account object stored in MSAL\r\n   */\n  getAccountByHomeId(homeAccountId) {\n    const correlationId = this.browserCrypto.createNewGuid();\n    return getAccountByHomeId(homeAccountId, this.logger, this.browserStorage, correlationId);\n  }\n  /**\r\n   * Returns the signed in account matching localAccountId.\r\n   * (the account object is created at the time of successful login)\r\n   * or null when no matching account is found\r\n   * @param localAccountId\r\n   * @returns The account object stored in MSAL\r\n   */\n  getAccountByLocalId(localAccountId) {\n    const correlationId = this.browserCrypto.createNewGuid();\n    return getAccountByLocalId(localAccountId, this.logger, this.browserStorage, correlationId);\n  }\n  /**\r\n   * Sets the account to use as the active account. If no account is passed to the acquireToken APIs, then MSAL will use this active account.\r\n   * @param account\r\n   */\n  setActiveAccount(account) {\n    /*\r\n     * StandardController uses this to allow the developer to set the active account\r\n     * in the nested app auth scenario the active account is controlled by the app hosting the nested app\r\n     */\n    const correlationId = this.browserCrypto.createNewGuid();\n    return setActiveAccount(account, this.browserStorage, correlationId);\n  }\n  /**\r\n   * Gets the currently active account\r\n   */\n  getActiveAccount() {\n    const correlationId = this.browserCrypto.createNewGuid();\n    return getActiveAccount(this.browserStorage, correlationId);\n  }\n  // #endregion\n  handleRedirectPromise(hash // eslint-disable-line @typescript-eslint/no-unused-vars\n  ) {\n    return Promise.resolve(null);\n  }\n  loginPopup(request // eslint-disable-line @typescript-eslint/no-unused-vars\n  ) {\n    return this.acquireTokenInteractive(request || DEFAULT_REQUEST);\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  loginRedirect(request) {\n    throw NestedAppAuthError.createUnsupportedError();\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  logout(logoutRequest) {\n    throw NestedAppAuthError.createUnsupportedError();\n  }\n  logoutRedirect(logoutRequest // eslint-disable-line @typescript-eslint/no-unused-vars\n  ) {\n    throw NestedAppAuthError.createUnsupportedError();\n  }\n  logoutPopup(logoutRequest // eslint-disable-line @typescript-eslint/no-unused-vars\n  ) {\n    throw NestedAppAuthError.createUnsupportedError();\n  }\n  ssoSilent(\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  request) {\n    return this.acquireTokenSilentInternal(request);\n  }\n  getTokenCache() {\n    throw NestedAppAuthError.createUnsupportedError();\n  }\n  /**\r\n   * Returns the logger instance\r\n   */\n  getLogger() {\n    return this.logger;\n  }\n  /**\r\n   * Replaces the default logger set in configurations with new Logger with new configurations\r\n   * @param logger Logger instance\r\n   */\n  setLogger(logger) {\n    this.logger = logger;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  initializeWrapperLibrary(sku, version) {\n    /*\r\n     * Standard controller uses this to set the sku and version of the wrapper library in the storage\r\n     * we do nothing here\r\n     */\n    return;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  setNavigationClient(navigationClient) {\n    this.logger.warning(\"setNavigationClient is not supported in nested app auth\");\n  }\n  getConfiguration() {\n    return this.config;\n  }\n  isBrowserEnv() {\n    return this.operatingContext.isBrowserEnvironment();\n  }\n  getBrowserCrypto() {\n    return this.browserCrypto;\n  }\n  getPerformanceClient() {\n    throw NestedAppAuthError.createUnsupportedError();\n  }\n  getRedirectResponse() {\n    throw NestedAppAuthError.createUnsupportedError();\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async clearCache(logoutRequest) {\n    throw NestedAppAuthError.createUnsupportedError();\n  }\n  async hydrateCache(result, request) {\n    this.logger.verbose(\"hydrateCache called\");\n    const accountEntity = AccountEntity.createFromAccountInfo(result.account, result.cloudGraphHostName, result.msGraphHost);\n    await this.browserStorage.setAccount(accountEntity, result.correlationId);\n    return this.browserStorage.hydrateCache(result, request);\n  }\n}\nexport { NestedAppAuthController };","map":{"version":3,"names":["NestedAppAuthController","constructor","operatingContext","proxy","getBridgeProxy","undefined","bridgeProxy","Error","config","getConfig","logger","getLogger","performanceClient","telemetry","client","browserCrypto","isBrowserEnvironment","CryptoOps","DEFAULT_CRYPTO_IMPLEMENTATION","eventHandler","EventHandler","browserStorage","BrowserCacheManager","auth","clientId","cache","buildStaticAuthorityOptions","DEFAULT_BROWSER_CACHE_MANAGER","nestedAppAuthAdapter","NestedAppAuthAdapter","clientCapabilities","accountContext","getAccountContext","currentAccountContext","createController","controller","Promise","resolve","initialize","request","isBroker","initCorrelationId","correlationId","createNewGuid","ensureValidRequest","acquireTokenInteractive","validRequest","emitEvent","EventType","ACQUIRE_TOKEN_START","InteractionType","Popup","atPopupMeasurement","startMeasurement","PerformanceEvents","AcquireTokenPopup","add","nestedAppAuthRequest","naaRequest","toNaaTokenRequest","reqTimestamp","TimeUtils","nowSeconds","response","getTokenInteractive","result","fromNaaTokenResponse","hydrateCache","error","warningPii","homeAccountId","account","environment","tenantId","ACQUIRE_TOKEN_SUCCESS","accessTokenSize","accessToken","length","idTokenSize","idToken","end","success","requestId","e","AuthError","fromBridgeError","ACQUIRE_TOKEN_FAILURE","acquireTokenSilentInternal","Silent","acquireTokenFromCache","ssoSilentMeasurement","SsoSilent","increment","visibilityChangeCount","forceRefresh","getTokenSilent","atsMeasurement","AcquireTokenSilent","claims","verbose","cacheLookupPolicy","CacheLookupPolicy","Default","AccessToken","AccessTokenAndRefreshToken","acquireTokenFromCacheInternal","warning","currentAccount","getAccount","authRequest","authority","scopes","OIDC_DEFAULT_SCOPES","tokenKeys","getTokenKeys","cachedAccessToken","getAccessToken","wasClockTurnedBack","cachedAt","isTokenExpired","expiresOn","system","tokenRenewalOffsetSeconds","cachedIdToken","getIdToken","toAuthenticationResultFromCache","acquireTokenPopup","acquireTokenRedirect","NestedAppAuthError","createUnsupportedError","acquireTokenSilent","silentRequest","acquireTokenByCode","acquireTokenNative","apiId","accountId","acquireTokenByRefreshToken","commonRequest","addEventCallback","callback","eventTypes","removeEventCallback","callbackId","addPerformanceCallback","removePerformanceCallback","enableAccountStorageEvents","disableAccountStorageEvents","getAllAccounts","accountFilter","isBrowserEnv","getAccountByUsername","username","getAccountByHomeId","getAccountByLocalId","localAccountId","setActiveAccount","getActiveAccount","handleRedirectPromise","hash","loginPopup","DEFAULT_REQUEST","loginRedirect","logout","logoutRequest","logoutRedirect","logoutPopup","ssoSilent","getTokenCache","setLogger","initializeWrapperLibrary","sku","version","setNavigationClient","navigationClient","getConfiguration","getBrowserCrypto","getPerformanceClient","getRedirectResponse","clearCache","accountEntity","AccountEntity","createFromAccountInfo","cloudGraphHostName","msGraphHost","setAccount"],"sources":["../../src/controllers/NestedAppAuthController.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}