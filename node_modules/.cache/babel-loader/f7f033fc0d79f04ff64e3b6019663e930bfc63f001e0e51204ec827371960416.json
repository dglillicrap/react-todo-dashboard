{"ast":null,"code":"var _jsxFileName = \"C:\\\\_Projects\\\\DGL_ToDo\\\\react_todo_dashboard2\\\\src\\\\components\\\\PreviewPanel.jsx\",\n  _s = $RefreshSig$();\n// src/components/PreviewPanel.jsx\nimport React, { useEffect, useState } from 'react';\nimport { useMsal } from '@azure/msal-react';\nimport { InteractionRequiredAuthError } from '@azure/msal-browser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PreviewPanel({\n  task,\n  listId\n}) {\n  _s();\n  const {\n    instance\n  } = useMsal();\n  const [steps, setSteps] = useState([]);\n  const [newStep, setNewStep] = useState('');\n  useEffect(() => {\n    const fetchSteps = async () => {\n      if (!task || !listId) return;\n      const account = instance.getActiveAccount();\n      if (!account) return;\n      const response = await instance.acquireTokenSilent({\n        scopes: ['Tasks.Read'],\n        account\n      });\n      const res = await fetch(`https://graph.microsoft.com/v1.0/me/todo/lists/${listId}/tasks/${task.id}/checklistItems`, {\n        headers: {\n          Authorization: `Bearer ${response.accessToken}`\n        }\n      });\n      const data = await res.json();\n      const sortedSteps = (data.value || []).sort((a, b) => a.displayName.localeCompare(b.displayName));\n      setSteps(sortedSteps);\n    };\n    fetchSteps();\n  }, [task, listId, instance]);\n  const handleAddStep = async () => {\n    if (!newStep.trim() || !task || !listId) return;\n    const account = instance.getActiveAccount();\n    let response;\n    try {\n      response = await instance.acquireTokenSilent({\n        scopes: ['Tasks.ReadWrite'],\n        account\n      });\n    } catch (error) {\n      if (error instanceof InteractionRequiredAuthError) {\n        response = await instance.loginPopup({\n          scopes: ['Tasks.ReadWrite']\n        });\n        instance.setActiveAccount(response.account);\n      } else {\n        console.error('Error acquiring token:', error);\n        return;\n      }\n    }\n    const res = await fetch(`https://graph.microsoft.com/v1.0/me/todo/lists/${listId}/tasks/${task.id}/checklistItems`, {\n      method: 'POST',\n      headers: {\n        Authorization: `Bearer ${response.accessToken}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        displayName: newStep\n      })\n    });\n    const newItem = await res.json();\n    const updatedSteps = [...steps, newItem].sort((a, b) => a.displayName.localeCompare(b.displayName));\n    setSteps(updatedSteps);\n    setNewStep('');\n  };\n  const toggleStep = async (stepId, isChecked) => {\n    const account = instance.getActiveAccount();\n    let response;\n    try {\n      response = await instance.acquireTokenSilent({\n        scopes: ['Tasks.ReadWrite'],\n        account\n      });\n    } catch (error) {\n      if (error instanceof InteractionRequiredAuthError) {\n        response = await instance.loginPopup({\n          scopes: ['Tasks.ReadWrite']\n        });\n        instance.setActiveAccount(response.account);\n      } else {\n        console.error('Error acquiring token:', error);\n        return;\n      }\n    }\n    await fetch(`https://graph.microsoft.com/v1.0/me/todo/lists/${listId}/tasks/${task.id}/checklistItems/${stepId}`, {\n      method: 'PATCH',\n      headers: {\n        Authorization: `Bearer ${response.accessToken}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        isChecked: !isChecked\n      })\n    });\n    setSteps(prev => prev.map(step => step.id === stepId ? {\n      ...step,\n      isChecked: !isChecked\n    } : step).sort((a, b) => a.displayName.localeCompare(b.displayName)));\n  };\n  if (!task) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Select a task to preview\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      style: {\n        fontSize: '0.8rem'\n      },\n      children: task.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        fontSize: '0.8rem'\n      },\n      children: steps.map(step => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: step.isChecked,\n          onChange: () => toggleStep(step.id, step.isChecked),\n          style: {\n            marginRight: '6px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), step.displayName]\n      }, step.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newStep,\n      onChange: e => setNewStep(e.target.value),\n      onKeyDown: e => e.key === 'Enter' && handleAddStep(),\n      placeholder: \"Add step\",\n      style: {\n        width: '100%',\n        marginTop: '8px',\n        fontSize: '0.8rem'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n}\n_s(PreviewPanel, \"H0I6j9jMieY5AAaOL4ikfZ4dbMY=\", false, function () {\n  return [useMsal];\n});\n_c = PreviewPanel;\nvar _c;\n$RefreshReg$(_c, \"PreviewPanel\");","map":{"version":3,"names":["React","useEffect","useState","useMsal","InteractionRequiredAuthError","jsxDEV","_jsxDEV","PreviewPanel","task","listId","_s","instance","steps","setSteps","newStep","setNewStep","fetchSteps","account","getActiveAccount","response","acquireTokenSilent","scopes","res","fetch","id","headers","Authorization","accessToken","data","json","sortedSteps","value","sort","a","b","displayName","localeCompare","handleAddStep","trim","error","loginPopup","setActiveAccount","console","method","body","JSON","stringify","newItem","updatedSteps","toggleStep","stepId","isChecked","prev","map","step","children","fileName","_jsxFileName","lineNumber","columnNumber","style","fontSize","title","type","checked","onChange","marginRight","e","target","onKeyDown","key","placeholder","width","marginTop","_c","$RefreshReg$"],"sources":["C:/_Projects/DGL_ToDo/react_todo_dashboard2/src/components/PreviewPanel.jsx"],"sourcesContent":["// src/components/PreviewPanel.jsx\nimport React, { useEffect, useState } from 'react';\nimport { useMsal } from '@azure/msal-react';\nimport { InteractionRequiredAuthError } from '@azure/msal-browser';\n\nexport default function PreviewPanel({ task, listId }) {\n  const { instance } = useMsal();\n  const [steps, setSteps] = useState([]);\n  const [newStep, setNewStep] = useState('');\n\n  useEffect(() => {\n    const fetchSteps = async () => {\n      if (!task || !listId) return;\n\n      const account = instance.getActiveAccount();\n      if (!account) return;\n\n      const response = await instance.acquireTokenSilent({\n        scopes: ['Tasks.Read'],\n        account,\n      });\n\n      const res = await fetch(\n        `https://graph.microsoft.com/v1.0/me/todo/lists/${listId}/tasks/${task.id}/checklistItems`,\n        {\n          headers: {\n            Authorization: `Bearer ${response.accessToken}`,\n          },\n        }\n      );\n\n      const data = await res.json();\n      const sortedSteps = (data.value || []).sort((a, b) =>\n        a.displayName.localeCompare(b.displayName)\n      );\n      setSteps(sortedSteps);\n    };\n\n    fetchSteps();\n  }, [task, listId, instance]);\n\n  const handleAddStep = async () => {\n    if (!newStep.trim() || !task || !listId) return;\n\n    const account = instance.getActiveAccount();\n    let response;\n    try {\n      response = await instance.acquireTokenSilent({\n        scopes: ['Tasks.ReadWrite'],\n        account,\n      });\n    } catch (error) {\n      if (error instanceof InteractionRequiredAuthError) {\n        response = await instance.loginPopup({\n          scopes: ['Tasks.ReadWrite'],\n        });\n        instance.setActiveAccount(response.account);\n      } else {\n        console.error('Error acquiring token:', error);\n        return;\n      }\n    }\n\n    const res = await fetch(\n      `https://graph.microsoft.com/v1.0/me/todo/lists/${listId}/tasks/${task.id}/checklistItems`,\n      {\n        method: 'POST',\n        headers: {\n          Authorization: `Bearer ${response.accessToken}`,\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ displayName: newStep }),\n      }\n    );\n\n    const newItem = await res.json();\n    const updatedSteps = [...steps, newItem].sort((a, b) =>\n      a.displayName.localeCompare(b.displayName)\n    );\n    setSteps(updatedSteps);\n    setNewStep('');\n  };\n\n  const toggleStep = async (stepId, isChecked) => {\n    const account = instance.getActiveAccount();\n    let response;\n    try {\n      response = await instance.acquireTokenSilent({\n        scopes: ['Tasks.ReadWrite'],\n        account,\n      });\n    } catch (error) {\n      if (error instanceof InteractionRequiredAuthError) {\n        response = await instance.loginPopup({\n          scopes: ['Tasks.ReadWrite'],\n        });\n        instance.setActiveAccount(response.account);\n      } else {\n        console.error('Error acquiring token:', error);\n        return;\n      }\n    }\n\n    await fetch(\n      `https://graph.microsoft.com/v1.0/me/todo/lists/${listId}/tasks/${task.id}/checklistItems/${stepId}`,\n      {\n        method: 'PATCH',\n        headers: {\n          Authorization: `Bearer ${response.accessToken}`,\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ isChecked: !isChecked }),\n      }\n    );\n\n    setSteps((prev) =>\n      prev.map((step) =>\n        step.id === stepId ? { ...step, isChecked: !isChecked } : step\n      ).sort((a, b) => a.displayName.localeCompare(b.displayName))\n    );\n  };\n\n  if (!task) return <p>Select a task to preview</p>;\n\n  return (\n    <div>\n      <h4 style={{ fontSize: '0.8rem' }}>{task.title}</h4>\n      <ul style={{ fontSize: '0.8rem' }}>\n        {steps.map((step) => (\n          <li key={step.id}>\n            <input\n              type=\"checkbox\"\n              checked={step.isChecked}\n              onChange={() => toggleStep(step.id, step.isChecked)}\n              style={{ marginRight: '6px' }}\n            />\n            {step.displayName}\n          </li>\n        ))}\n      </ul>\n      <input\n        type=\"text\"\n        value={newStep}\n        onChange={(e) => setNewStep(e.target.value)}\n        onKeyDown={(e) => e.key === 'Enter' && handleAddStep()}\n        placeholder=\"Add step\"\n        style={{ width: '100%', marginTop: '8px', fontSize: '0.8rem' }}\n      />\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}