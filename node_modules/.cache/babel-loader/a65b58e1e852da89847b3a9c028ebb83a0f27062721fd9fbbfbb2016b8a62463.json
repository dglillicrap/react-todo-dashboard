{"ast":null,"code":"var _s = $RefreshSig$();\n// src/hooks/useTasks.js\nimport { useMsal } from '@azure/msal-react';\nimport { useEffect, useState } from 'react';\nconst useTasks = listId => {\n  _s();\n  const {\n    instance\n  } = useMsal();\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    if (!listId) {\n      setTasks([]);\n      setLoading(false);\n      return;\n    }\n    const fetchTasks = async () => {\n      try {\n        const account = instance.getActiveAccount();\n        if (!account) {\n          console.warn('No active account. Skipping fetch.');\n          setLoading(false);\n          return;\n        }\n        const response = await instance.acquireTokenSilent({\n          scopes: ['Tasks.Read'],\n          account\n        });\n        const res = await fetch(`https://graph.microsoft.com/v1.0/me/todo/lists/${listId}/tasks`, {\n          headers: {\n            Authorization: `Bearer ${response.accessToken}`\n          }\n        });\n        const data = await res.json();\n        setTasks(data.value || []);\n      } catch (error) {\n        console.error('Error fetching tasks:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTasks();\n  }, [listId, instance]);\n  return {\n    tasks,\n    loading\n  };\n};\n_s(useTasks, \"K+EKXieaZ4DU1880VhEVuUVyYPg=\", false, function () {\n  return [useMsal];\n});\nexport default useTasks;","map":{"version":3,"names":["useMsal","useEffect","useState","useTasks","listId","_s","instance","tasks","setTasks","loading","setLoading","fetchTasks","account","getActiveAccount","console","warn","response","acquireTokenSilent","scopes","res","fetch","headers","Authorization","accessToken","data","json","value","error"],"sources":["C:/_Projects/DGL_ToDo/react_todo_dashboard2/src/hooks/useTasks.js"],"sourcesContent":["// src/hooks/useTasks.js\r\nimport { useMsal } from '@azure/msal-react';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst useTasks = (listId) => {\r\n  const { instance } = useMsal();\r\n  const [tasks, setTasks] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (!listId) {\r\n      setTasks([]);\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    const fetchTasks = async () => {\r\n      try {\r\n        const account = instance.getActiveAccount();\r\n        \r\n\tif (!account) {\r\n  \tconsole.warn('No active account. Skipping fetch.');\r\n\tsetLoading(false);\r\n  \treturn;\r\n\t}\r\n\r\n\r\n        const response = await instance.acquireTokenSilent({\r\n          scopes: ['Tasks.Read'],\r\n          account,\r\n        });\r\n\r\n        const res = await fetch(\r\n          `https://graph.microsoft.com/v1.0/me/todo/lists/${listId}/tasks`,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${response.accessToken}`,\r\n            },\r\n          }\r\n        );\r\n\r\n        const data = await res.json();\r\n        setTasks(data.value || []);\r\n      } catch (error) {\r\n        console.error('Error fetching tasks:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchTasks();\r\n  }, [listId, instance]);\r\n\r\n  return { tasks, loading };\r\n};\r\n\r\nexport default useTasks;"],"mappings":";AAAA;AACA,SAASA,OAAO,QAAQ,mBAAmB;AAC3C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,MAAMC,QAAQ,GAAIC,MAAM,IAAK;EAAAC,EAAA;EAC3B,MAAM;IAAEC;EAAS,CAAC,GAAGN,OAAO,CAAC,CAAC;EAC9B,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,IAAI,CAACG,MAAM,EAAE;MACXI,QAAQ,CAAC,EAAE,CAAC;MACZE,UAAU,CAAC,KAAK,CAAC;MACjB;IACF;IAEA,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,OAAO,GAAGN,QAAQ,CAACO,gBAAgB,CAAC,CAAC;QAElD,IAAI,CAACD,OAAO,EAAE;UACZE,OAAO,CAACC,IAAI,CAAC,oCAAoC,CAAC;UACpDL,UAAU,CAAC,KAAK,CAAC;UACf;QACF;QAGO,MAAMM,QAAQ,GAAG,MAAMV,QAAQ,CAACW,kBAAkB,CAAC;UACjDC,MAAM,EAAE,CAAC,YAAY,CAAC;UACtBN;QACF,CAAC,CAAC;QAEF,MAAMO,GAAG,GAAG,MAAMC,KAAK,CACrB,kDAAkDhB,MAAM,QAAQ,EAChE;UACEiB,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUN,QAAQ,CAACO,WAAW;UAC/C;QACF,CACF,CAAC;QAED,MAAMC,IAAI,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,CAAC;QAC7BjB,QAAQ,CAACgB,IAAI,CAACE,KAAK,IAAI,EAAE,CAAC;MAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdb,OAAO,CAACa,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C,CAAC,SAAS;QACRjB,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDC,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACP,MAAM,EAAEE,QAAQ,CAAC,CAAC;EAEtB,OAAO;IAAEC,KAAK;IAAEE;EAAQ,CAAC;AAC3B,CAAC;AAACJ,EAAA,CAlDIF,QAAQ;EAAA,QACSH,OAAO;AAAA;AAmD9B,eAAeG,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}