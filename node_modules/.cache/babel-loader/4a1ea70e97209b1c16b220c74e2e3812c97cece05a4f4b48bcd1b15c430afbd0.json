{"ast":null,"code":"import _objectSpread from\"C:/_Projects/DGL_ToDo/react_todo_dashboard2/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// src/components/PreviewPanel.jsx\nimport React,{useEffect,useState}from'react';import{useMsal}from'@azure/msal-react';import{InteractionRequiredAuthError}from'@azure/msal-browser';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function PreviewPanel(_ref){let{task,listId,onTaskTitleUpdate}=_ref;const{instance}=useMsal();const[steps,setSteps]=useState([]);const[newStep,setNewStep]=useState('');const[notes,setNotes]=useState('');const[editingTitle,setEditingTitle]=useState(false);const[editedTitle,setEditedTitle]=useState('');const getToken=async()=>{const account=instance.getActiveAccount();if(!account)return null;try{return await instance.acquireTokenSilent({scopes:['Tasks.ReadWrite'],account});}catch(error){if(error instanceof InteractionRequiredAuthError){const response=await instance.loginPopup({scopes:['Tasks.ReadWrite']});instance.setActiveAccount(response.account);return response;}else{console.error('Token acquisition failed:',error);return null;}}};useEffect(()=>{const fetchStepsAndNotes=async()=>{var _taskData$body;if(!task||!listId)return;const account=instance.getActiveAccount();if(!account)return;const response=await instance.acquireTokenSilent({scopes:['Tasks.Read'],account});// Fetch steps\nconst stepsRes=await fetch(\"https://graph.microsoft.com/v1.0/me/todo/lists/\".concat(listId,\"/tasks/\").concat(task.id,\"/checklistItems\"),{headers:{Authorization:\"Bearer \".concat(response.accessToken)}});const stepsData=await stepsRes.json();const sortedSteps=(stepsData.value||[]).filter(step=>!step.isChecked)// show only incomplete\n.sort((a,b)=>{const aTitle=a.displayName||'';const bTitle=b.displayName||'';const aIsBottom=aTitle.startsWith('🕳️')||aTitle.startsWith('~');const bIsBottom=bTitle.startsWith('🕳️')||bTitle.startsWith('~');if(aIsBottom&&!bIsBottom)return 1;if(!aIsBottom&&bIsBottom)return-1;return aTitle.localeCompare(bTitle);});setSteps(sortedSteps);// Fetch notes and title\nconst taskRes=await fetch(\"https://graph.microsoft.com/v1.0/me/todo/lists/\".concat(listId,\"/tasks/\").concat(task.id),{headers:{Authorization:\"Bearer \".concat(response.accessToken)}});const taskData=await taskRes.json();setNotes(((_taskData$body=taskData.body)===null||_taskData$body===void 0?void 0:_taskData$body.content)||'');setEditedTitle(taskData.title||'');};fetchStepsAndNotes();},[task,listId,instance]);const handleAddStep=async()=>{if(!newStep.trim()||!task||!listId)return;const response=await getToken();if(!response)return;const res=await fetch(\"https://graph.microsoft.com/v1.0/me/todo/lists/\".concat(listId,\"/tasks/\").concat(task.id,\"/checklistItems\"),{method:'POST',headers:{Authorization:\"Bearer \".concat(response.accessToken),'Content-Type':'application/json'},body:JSON.stringify({displayName:newStep})});const newItem=await res.json();const updatedSteps=[...steps,newItem].sort((a,b)=>{const aTitle=a.displayName||'';const bTitle=b.displayName||'';const aIsBottom=aTitle.startsWith('🕳️')||aTitle.startsWith('~');const bIsBottom=bTitle.startsWith('🕳️')||bTitle.startsWith('~');if(aIsBottom&&!bIsBottom)return 1;if(!aIsBottom&&bIsBottom)return-1;return aTitle.localeCompare(bTitle);});setSteps(updatedSteps);setNewStep('');};// Local update while typing (no network)\nconst updateStepNameLocal=(stepId,newName)=>{setSteps(prev=>prev.map(step=>step.id===stepId?_objectSpread(_objectSpread({},step),{},{displayName:newName}):step));};// Commit name change to Graph on blur/Enter\nconst commitStepName=async stepId=>{const response=await getToken();if(!response)return;const step=steps.find(s=>s.id===stepId);if(!step)return;await fetch(\"https://graph.microsoft.com/v1.0/me/todo/lists/\".concat(listId,\"/tasks/\").concat(task.id,\"/checklistItems/\").concat(stepId),{method:'PATCH',headers:{Authorization:\"Bearer \".concat(response.accessToken),'Content-Type':'application/json'},body:JSON.stringify({displayName:step.displayName})});};// Mark step completed (checkbox)\nconst toggleStepCompleted=async(stepId,checked)=>{const response=await getToken();if(!response)return;await fetch(\"https://graph.microsoft.com/v1.0/me/todo/lists/\".concat(listId,\"/tasks/\").concat(task.id,\"/checklistItems/\").concat(stepId),{method:'PATCH',headers:{Authorization:\"Bearer \".concat(response.accessToken),'Content-Type':'application/json'},body:JSON.stringify({isChecked:!!checked})});if(checked){setSteps(prev=>prev.filter(s=>s.id!==stepId));// remove completed from view\n}};const updateTaskTitle=async()=>{const response=await getToken();if(!response)return;await fetch(\"https://graph.microsoft.com/v1.0/me/todo/lists/\".concat(listId,\"/tasks/\").concat(task.id),{method:'PATCH',headers:{Authorization:\"Bearer \".concat(response.accessToken),'Content-Type':'application/json'},body:JSON.stringify({title:editedTitle})});setEditingTitle(false);if(typeof onTaskTitleUpdate==='function'){onTaskTitleUpdate(task.id,editedTitle);}};const updateTaskNotes=async()=>{const response=await getToken();if(!response)return;await fetch(\"https://graph.microsoft.com/v1.0/me/todo/lists/\".concat(listId,\"/tasks/\").concat(task.id),{method:'PATCH',headers:{Authorization:\"Bearer \".concat(response.accessToken),'Content-Type':'application/json'},body:JSON.stringify({body:{contentType:'text',content:notes}})});};if(!task)return/*#__PURE__*/_jsx(\"p\",{children:\"Select a task to preview\"});return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{style:{fontSize:'0.9rem',marginBottom:'4px'},children:\"Task Pane\"}),editingTitle?/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:editedTitle,onChange:e=>setEditedTitle(e.target.value),onBlur:updateTaskTitle,style:{fontSize:'0.8rem',width:'100%',marginBottom:'6px'}}):/*#__PURE__*/_jsx(\"h4\",{style:{fontSize:'0.8rem',cursor:'pointer',marginBottom:'6px'},onClick:()=>setEditingTitle(true),children:editedTitle}),/*#__PURE__*/_jsx(\"ul\",{style:{fontSize:'0.8rem'},children:steps.map(step=>/*#__PURE__*/_jsxs(\"li\",{style:{display:'flex',alignItems:'center',gap:'6px'},children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:false// list shows only incomplete steps\n,onChange:e=>toggleStepCompleted(step.id,e.target.checked)}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:step.displayName,onChange:e=>updateStepNameLocal(step.id,e.target.value),onBlur:()=>commitStepName(step.id),onKeyDown:e=>{if(e.key==='Enter'){e.preventDefault();e.currentTarget.blur();// triggers commit\n}},style:{fontSize:'0.8rem',width:'90%'}})]},step.id))}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newStep,onChange:e=>setNewStep(e.target.value),onKeyDown:e=>e.key==='Enter'&&handleAddStep(),placeholder:\"Add step\",style:{width:'100%',marginTop:'8px',fontSize:'0.8rem',backgroundColor:'#d6eaff',// light blue, matches page\nborder:'1px solid #d0d0d0',// light grey border\ncolor:'inherit'// keep current text color\n}}),/*#__PURE__*/_jsx(\"textarea\",{value:notes,onChange:e=>setNotes(e.target.value),onBlur:updateTaskNotes,placeholder:\"Task notes\",style:{width:'100%',marginTop:'8px',fontSize:'0.8rem',height:'60px'}})]});}","map":{"version":3,"names":["React","useEffect","useState","useMsal","InteractionRequiredAuthError","jsx","_jsx","jsxs","_jsxs","PreviewPanel","_ref","task","listId","onTaskTitleUpdate","instance","steps","setSteps","newStep","setNewStep","notes","setNotes","editingTitle","setEditingTitle","editedTitle","setEditedTitle","getToken","account","getActiveAccount","acquireTokenSilent","scopes","error","response","loginPopup","setActiveAccount","console","fetchStepsAndNotes","_taskData$body","stepsRes","fetch","concat","id","headers","Authorization","accessToken","stepsData","json","sortedSteps","value","filter","step","isChecked","sort","a","b","aTitle","displayName","bTitle","aIsBottom","startsWith","bIsBottom","localeCompare","taskRes","taskData","body","content","title","handleAddStep","trim","res","method","JSON","stringify","newItem","updatedSteps","updateStepNameLocal","stepId","newName","prev","map","_objectSpread","commitStepName","find","s","toggleStepCompleted","checked","updateTaskTitle","updateTaskNotes","contentType","children","style","fontSize","marginBottom","type","onChange","e","target","onBlur","width","cursor","onClick","display","alignItems","gap","onKeyDown","key","preventDefault","currentTarget","blur","placeholder","marginTop","backgroundColor","border","color","height"],"sources":["C:/_Projects/DGL_ToDo/react_todo_dashboard2/src/components/PreviewPanel.jsx"],"sourcesContent":["// src/components/PreviewPanel.jsx\nimport React, { useEffect, useState } from 'react';\nimport { useMsal } from '@azure/msal-react';\nimport { InteractionRequiredAuthError } from '@azure/msal-browser';\n\nexport default function PreviewPanel({ task, listId, onTaskTitleUpdate }) {\n  const { instance } = useMsal();\n  const [steps, setSteps] = useState([]);\n  const [newStep, setNewStep] = useState('');\n  const [notes, setNotes] = useState('');\n  const [editingTitle, setEditingTitle] = useState(false);\n  const [editedTitle, setEditedTitle] = useState('');\n\n  const getToken = async () => {\n    const account = instance.getActiveAccount();\n    if (!account) return null;\n    try {\n      return await instance.acquireTokenSilent({\n        scopes: ['Tasks.ReadWrite'],\n        account,\n      });\n    } catch (error) {\n      if (error instanceof InteractionRequiredAuthError) {\n        const response = await instance.loginPopup({\n          scopes: ['Tasks.ReadWrite'],\n        });\n        instance.setActiveAccount(response.account);\n        return response;\n      } else {\n        console.error('Token acquisition failed:', error);\n        return null;\n      }\n    }\n  };\n\n  useEffect(() => {\n    const fetchStepsAndNotes = async () => {\n      if (!task || !listId) return;\n      const account = instance.getActiveAccount();\n      if (!account) return;\n\n      const response = await instance.acquireTokenSilent({\n        scopes: ['Tasks.Read'],\n        account,\n      });\n\n      // Fetch steps\n      const stepsRes = await fetch(\n        `https://graph.microsoft.com/v1.0/me/todo/lists/${listId}/tasks/${task.id}/checklistItems`,\n        { headers: { Authorization: `Bearer ${response.accessToken}` } }\n      );\n      const stepsData = await stepsRes.json();\n      const sortedSteps = (stepsData.value || [])\n        .filter(step => !step.isChecked) // show only incomplete\n        .sort((a, b) => {\n          const aTitle = a.displayName || '';\n          const bTitle = b.displayName || '';\n          const aIsBottom = aTitle.startsWith('🕳️') || aTitle.startsWith('~');\n          const bIsBottom = bTitle.startsWith('🕳️') || bTitle.startsWith('~');\n          if (aIsBottom && !bIsBottom) return 1;\n          if (!aIsBottom && bIsBottom) return -1;\n          return aTitle.localeCompare(bTitle);\n        });\n      setSteps(sortedSteps);\n\n      // Fetch notes and title\n      const taskRes = await fetch(\n        `https://graph.microsoft.com/v1.0/me/todo/lists/${listId}/tasks/${task.id}`,\n        { headers: { Authorization: `Bearer ${response.accessToken}` } }\n      );\n      const taskData = await taskRes.json();\n      setNotes(taskData.body?.content || '');\n      setEditedTitle(taskData.title || '');\n    };\n    fetchStepsAndNotes();\n  }, [task, listId, instance]);\n\n  const handleAddStep = async () => {\n    if (!newStep.trim() || !task || !listId) return;\n    const response = await getToken();\n    if (!response) return;\n\n    const res = await fetch(\n      `https://graph.microsoft.com/v1.0/me/todo/lists/${listId}/tasks/${task.id}/checklistItems`,\n      {\n        method: 'POST',\n        headers: {\n          Authorization: `Bearer ${response.accessToken}`,\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ displayName: newStep }),\n      }\n    );\n    const newItem = await res.json();\n\n    const updatedSteps = [...steps, newItem].sort((a, b) => {\n      const aTitle = a.displayName || '';\n      const bTitle = b.displayName || '';\n      const aIsBottom = aTitle.startsWith('🕳️') || aTitle.startsWith('~');\n      const bIsBottom = bTitle.startsWith('🕳️') || bTitle.startsWith('~');\n      if (aIsBottom && !bIsBottom) return 1;\n      if (!aIsBottom && bIsBottom) return -1;\n      return aTitle.localeCompare(bTitle);\n    });\n    setSteps(updatedSteps);\n    setNewStep('');\n  };\n\n  // Local update while typing (no network)\n  const updateStepNameLocal = (stepId, newName) => {\n    setSteps(prev =>\n      prev.map(step =>\n        step.id === stepId ? { ...step, displayName: newName } : step\n      )\n    );\n  };\n\n  // Commit name change to Graph on blur/Enter\n  const commitStepName = async (stepId) => {\n    const response = await getToken();\n    if (!response) return;\n\n    const step = steps.find(s => s.id === stepId);\n    if (!step) return;\n\n    await fetch(\n      `https://graph.microsoft.com/v1.0/me/todo/lists/${listId}/tasks/${task.id}/checklistItems/${stepId}`,\n      {\n        method: 'PATCH',\n        headers: {\n          Authorization: `Bearer ${response.accessToken}`,\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ displayName: step.displayName }),\n      }\n    );\n  };\n\n  // Mark step completed (checkbox)\n  const toggleStepCompleted = async (stepId, checked) => {\n    const response = await getToken();\n    if (!response) return;\n\n    await fetch(\n      `https://graph.microsoft.com/v1.0/me/todo/lists/${listId}/tasks/${task.id}/checklistItems/${stepId}`,\n      {\n        method: 'PATCH',\n        headers: {\n          Authorization: `Bearer ${response.accessToken}`,\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ isChecked: !!checked }),\n      }\n    );\n\n    if (checked) {\n      setSteps(prev => prev.filter(s => s.id !== stepId)); // remove completed from view\n    }\n  };\n\n  const updateTaskTitle = async () => {\n    const response = await getToken();\n    if (!response) return;\n\n    await fetch(\n      `https://graph.microsoft.com/v1.0/me/todo/lists/${listId}/tasks/${task.id}`,\n      {\n        method: 'PATCH',\n        headers: {\n          Authorization: `Bearer ${response.accessToken}`,\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ title: editedTitle }),\n      }\n    );\n    setEditingTitle(false);\n    if (typeof onTaskTitleUpdate === 'function') {\n      onTaskTitleUpdate(task.id, editedTitle);\n    }\n  };\n\n  const updateTaskNotes = async () => {\n    const response = await getToken();\n    if (!response) return;\n\n    await fetch(\n      `https://graph.microsoft.com/v1.0/me/todo/lists/${listId}/tasks/${task.id}`,\n      {\n        method: 'PATCH',\n        headers: {\n          Authorization: `Bearer ${response.accessToken}`,\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          body: { contentType: 'text', content: notes },\n        }),\n      }\n    );\n  };\n\n  if (!task) return <p>Select a task to preview</p>;\n\n  return (\n    <div>\n      <h3 style={{ fontSize: '0.9rem', marginBottom: '4px' }}>Task Pane</h3>\n\n      {editingTitle ? (\n        <input\n          type=\"text\"\n          value={editedTitle}\n          onChange={(e) => setEditedTitle(e.target.value)}\n          onBlur={updateTaskTitle}\n          style={{ fontSize: '0.8rem', width: '100%', marginBottom: '6px' }}\n        />\n      ) : (\n        <h4\n          style={{ fontSize: '0.8rem', cursor: 'pointer', marginBottom: '6px' }}\n          onClick={() => setEditingTitle(true)}\n        >\n          {editedTitle}\n        </h4>\n      )}\n\n      <ul style={{ fontSize: '0.8rem' }}>\n        {steps.map((step) => (\n          <li key={step.id} style={{ display: 'flex', alignItems: 'center', gap: '6px' }}>\n            {/* Completion checkbox */}\n            <input\n              type=\"checkbox\"\n              checked={false} // list shows only incomplete steps\n              onChange={(e) => toggleStepCompleted(step.id, e.target.checked)}\n            />\n\n            {/* Step name (editable) */}\n            <input\n              type=\"text\"\n              value={step.displayName}\n              onChange={(e) => updateStepNameLocal(step.id, e.target.value)}\n              onBlur={() => commitStepName(step.id)}\n              onKeyDown={(e) => {\n                if (e.key === 'Enter') {\n                  e.preventDefault();\n                  e.currentTarget.blur(); // triggers commit\n                }\n              }}\n              style={{ fontSize: '0.8rem', width: '90%' }}\n            />\n          </li>\n        ))}\n      </ul>\n\n      {/* Add new step - styled light blue + light grey border */}\n      <input\n        type=\"text\"\n        value={newStep}\n        onChange={(e) => setNewStep(e.target.value)}\n        onKeyDown={(e) => e.key === 'Enter' && handleAddStep()}\n        placeholder=\"Add step\"\n        style={{\n          width: '100%',\n          marginTop: '8px',\n          fontSize: '0.8rem',\n          backgroundColor: '#d6eaff',   // light blue, matches page\n          border: '1px solid #d0d0d0',  // light grey border\n          color: 'inherit'               // keep current text color\n        }}\n      />\n\n      {/* Notes */}\n      <textarea\n        value={notes}\n        onChange={(e) => setNotes(e.target.value)}\n        onBlur={updateTaskNotes}\n        placeholder=\"Task notes\"\n        style={{\n          width: '100%',\n          marginTop: '8px',\n          fontSize: '0.8rem',\n          height: '60px',\n        }}\n      />\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}