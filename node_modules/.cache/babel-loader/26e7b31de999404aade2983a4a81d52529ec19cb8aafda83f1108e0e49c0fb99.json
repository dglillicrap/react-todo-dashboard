{"ast":null,"code":"// src/components/TaskPanel.jsx\nimport React,{useState}from'react';import{useMsal}from'@azure/msal-react';import{InteractionRequiredAuthError}from'@azure/msal-browser';import useTasks from'../hooks/useTasks';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TaskPanel=_ref=>{let{listId,refreshKey=0,onSelectTask}=_ref;const{instance}=useMsal();const[newTask,setNewTask]=useState('');const{tasks,loading:loadingTasks}=useTasks(listId,refreshKey);const handleAddTask=async()=>{if(!newTask.trim()||!listId)return;const account=instance.getActiveAccount();if(!account)return;let response;try{response=await instance.acquireTokenSilent({scopes:['Tasks.ReadWrite'],account});}catch(error){if(error instanceof InteractionRequiredAuthError){response=await instance.loginPopup({scopes:['Tasks.ReadWrite']});instance.setActiveAccount(response.account);}else{console.error('Error acquiring token:',error);return;}}await fetch(\"https://graph.microsoft.com/v1.0/me/todo/lists/\".concat(listId,\"/tasks\"),{method:'POST',headers:{Authorization:\"Bearer \".concat(response.accessToken),'Content-Type':'application/json'},body:JSON.stringify({title:newTask})});setNewTask('');// Panels will re-fetch when refreshKey changes from parent if needed\n};const handleCompleteTask=async taskId=>{const account=instance.getActiveAccount();if(!account)return;let response;try{response=await instance.acquireTokenSilent({scopes:['Tasks.ReadWrite'],account});}catch(error){if(error instanceof InteractionRequiredAuthError){response=await instance.loginPopup({scopes:['Tasks.ReadWrite']});instance.setActiveAccount(response.account);}else{console.error('Error acquiring token:',error);return;}}await fetch(\"https://graph.microsoft.com/v1.0/me/todo/lists/\".concat(listId,\"/tasks/\").concat(taskId),{method:'PATCH',headers:{Authorization:\"Bearer \".concat(response.accessToken),'Content-Type':'application/json'},body:JSON.stringify({status:'completed'})});};// Filter + sort (incomplete only, üï≥Ô∏è/~ to bottom)\nconst incompleteTasks=(tasks||[]).filter(task=>task.status!=='completed').sort((a,b)=>{const aTitle=a.title||'';const bTitle=b.title||'';const aIsBottom=aTitle.startsWith('üï≥Ô∏è')||aTitle.startsWith('~');const bIsBottom=bTitle.startsWith('üï≥Ô∏è')||bTitle.startsWith('~');if(aIsBottom&&!bIsBottom)return 1;if(!aIsBottom&&bIsBottom)return-1;return aTitle.localeCompare(bTitle);});return/*#__PURE__*/_jsxs(\"div\",{children:[loadingTasks?/*#__PURE__*/_jsx(\"p\",{style:{fontSize:'0.8rem'},children:\"Loading tasks...\"}):incompleteTasks.length===0?/*#__PURE__*/_jsx(\"p\",{style:{fontSize:'0.8rem'},children:\"No tasks found.\"}):/*#__PURE__*/_jsx(\"ul\",{style:{fontSize:'0.8rem'},children:incompleteTasks.map(task=>/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",onChange:()=>handleCompleteTask(task.id),style:{marginRight:'6px'}}),/*#__PURE__*/_jsx(\"span\",{onClick:()=>onSelectTask(task),children:task.title})]},task.id))}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newTask,onChange:e=>setNewTask(e.target.value),onKeyDown:e=>e.key==='Enter'&&handleAddTask(),placeholder:\"Add new task\"/* ‚úÖ Light blue background, light grey border, keep text color */,style:{width:'100%',marginTop:'8px',fontSize:'0.8rem',backgroundColor:'#d6eaff',// same as page background\nborder:'1px solid #d0d0d0',// light grey border\ncolor:'inherit'// keep current text color\n}})]});};export default TaskPanel;","map":{"version":3,"names":["React","useState","useMsal","InteractionRequiredAuthError","useTasks","jsx","_jsx","jsxs","_jsxs","TaskPanel","_ref","listId","refreshKey","onSelectTask","instance","newTask","setNewTask","tasks","loading","loadingTasks","handleAddTask","trim","account","getActiveAccount","response","acquireTokenSilent","scopes","error","loginPopup","setActiveAccount","console","fetch","concat","method","headers","Authorization","accessToken","body","JSON","stringify","title","handleCompleteTask","taskId","status","incompleteTasks","filter","task","sort","a","b","aTitle","bTitle","aIsBottom","startsWith","bIsBottom","localeCompare","children","style","fontSize","length","map","type","onChange","id","marginRight","onClick","value","e","target","onKeyDown","key","placeholder","width","marginTop","backgroundColor","border","color"],"sources":["C:/_Projects/DGL_ToDo/react_todo_dashboard2/src/components/TaskPanel.jsx"],"sourcesContent":["// src/components/TaskPanel.jsx\r\nimport React, { useState } from 'react';\r\nimport { useMsal } from '@azure/msal-react';\r\nimport { InteractionRequiredAuthError } from '@azure/msal-browser';\r\nimport useTasks from '../hooks/useTasks';\r\n\r\nconst TaskPanel = ({ listId, refreshKey = 0, onSelectTask }) => {\r\n  const { instance } = useMsal();\r\n  const [newTask, setNewTask] = useState('');\r\n  const { tasks, loading: loadingTasks } = useTasks(listId, refreshKey);\r\n\r\n  const handleAddTask = async () => {\r\n    if (!newTask.trim() || !listId) return;\r\n    const account = instance.getActiveAccount();\r\n    if (!account) return;\r\n    let response;\r\n    try {\r\n      response = await instance.acquireTokenSilent({\r\n        scopes: ['Tasks.ReadWrite'],\r\n        account,\r\n      });\r\n    } catch (error) {\r\n      if (error instanceof InteractionRequiredAuthError) {\r\n        response = await instance.loginPopup({ scopes: ['Tasks.ReadWrite'] });\r\n        instance.setActiveAccount(response.account);\r\n      } else {\r\n        console.error('Error acquiring token:', error);\r\n        return;\r\n      }\r\n    }\r\n    await fetch(`https://graph.microsoft.com/v1.0/me/todo/lists/${listId}/tasks`, {\r\n      method: 'POST',\r\n      headers: {\r\n        Authorization: `Bearer ${response.accessToken}`,\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ title: newTask }),\r\n    });\r\n    setNewTask('');\r\n    // Panels will re-fetch when refreshKey changes from parent if needed\r\n  };\r\n\r\n  const handleCompleteTask = async (taskId) => {\r\n    const account = instance.getActiveAccount();\r\n    if (!account) return;\r\n    let response;\r\n    try {\r\n      response = await instance.acquireTokenSilent({\r\n        scopes: ['Tasks.ReadWrite'],\r\n        account,\r\n      });\r\n    } catch (error) {\r\n      if (error instanceof InteractionRequiredAuthError) {\r\n        response = await instance.loginPopup({ scopes: ['Tasks.ReadWrite'] });\r\n        instance.setActiveAccount(response.account);\r\n      } else {\r\n        console.error('Error acquiring token:', error);\r\n        return;\r\n      }\r\n    }\r\n    await fetch(`https://graph.microsoft.com/v1.0/me/todo/lists/${listId}/tasks/${taskId}`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        Authorization: `Bearer ${response.accessToken}`,\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ status: 'completed' }),\r\n    });\r\n  };\r\n\r\n  // Filter + sort (incomplete only, üï≥Ô∏è/~ to bottom)\r\n  const incompleteTasks = (tasks || [])\r\n    .filter((task) => task.status !== 'completed')\r\n    .sort((a, b) => {\r\n      const aTitle = a.title || '';\r\n      const bTitle = b.title || '';\r\n      const aIsBottom = aTitle.startsWith('üï≥Ô∏è') || aTitle.startsWith('~');\r\n      const bIsBottom = bTitle.startsWith('üï≥Ô∏è') || bTitle.startsWith('~');\r\n      if (aIsBottom && !bIsBottom) return 1;\r\n      if (!aIsBottom && bIsBottom) return -1;\r\n      return aTitle.localeCompare(bTitle);\r\n    });\r\n\r\n  return (\r\n    <div>\r\n      {loadingTasks ? (\r\n        <p style={{ fontSize: '0.8rem' }}>Loading tasks...</p>\r\n      ) : incompleteTasks.length === 0 ? (\r\n        <p style={{ fontSize: '0.8rem' }}>No tasks found.</p>\r\n      ) : (\r\n        <ul style={{ fontSize: '0.8rem' }}>\r\n          {incompleteTasks.map((task) => (\r\n            <li key={task.id}>\r\n              <input\r\n                type=\"checkbox\"\r\n                onChange={() => handleCompleteTask(task.id)}\r\n                style={{ marginRight: '6px' }}\r\n              />\r\n              <span onClick={() => onSelectTask(task)}>{task.title}</span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n\r\n      <input\r\n        type=\"text\"\r\n        value={newTask}\r\n        onChange={(e) => setNewTask(e.target.value)}\r\n        onKeyDown={(e) => e.key === 'Enter' && handleAddTask()}\r\n        placeholder=\"Add new task\"\r\n        /* ‚úÖ Light blue background, light grey border, keep text color */\r\n        style={{\r\n          width: '100%',\r\n          marginTop: '8px',\r\n          fontSize: '0.8rem',\r\n          backgroundColor: '#d6eaff',      // same as page background\r\n          border: '1px solid #d0d0d0',     // light grey border\r\n          color: 'inherit'                  // keep current text color\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default TaskPanel;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}