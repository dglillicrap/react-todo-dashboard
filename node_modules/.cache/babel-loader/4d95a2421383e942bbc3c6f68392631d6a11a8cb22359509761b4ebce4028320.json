{"ast":null,"code":"// src/hooks/useTaskLists.js\nimport{useMsal}from'@azure/msal-react';import{useEffect,useState}from'react';import{InteractionRequiredAuthError}from'@azure/msal-browser';const useTaskLists=()=>{const{instance}=useMsal();const[taskLists,setTaskLists]=useState([]);const[loading,setLoading]=useState(true);useEffect(()=>{const fetchTaskLists=async()=>{try{const account=instance.getActiveAccount();if(!account){console.warn('No active account. User may not be signed in.');return;}let response;try{response=await instance.acquireTokenSilent({scopes:['Tasks.Read'],account});}catch(error){if(error instanceof InteractionRequiredAuthError){response=await instance.loginPopup({scopes:['Tasks.Read']});}else{throw error;}}const res=await fetch('https://graph.microsoft.com/v1.0/me/todo/lists',{headers:{Authorization:\"Bearer \".concat(response.accessToken)}});const data=await res.json();setTaskLists(data.value||[]);}catch(error){console.error('Error fetching task lists:',error);}finally{setLoading(false);}};fetchTaskLists();},[instance]);return{taskLists,loading};};export default useTaskLists;","map":{"version":3,"names":["useMsal","useEffect","useState","InteractionRequiredAuthError","useTaskLists","instance","taskLists","setTaskLists","loading","setLoading","fetchTaskLists","account","getActiveAccount","console","warn","response","acquireTokenSilent","scopes","error","loginPopup","res","fetch","headers","Authorization","concat","accessToken","data","json","value"],"sources":["C:/_Projects/DGL_ToDo/react_todo_dashboard2/src/hooks/useTaskLists.js"],"sourcesContent":["// src/hooks/useTaskLists.js\r\nimport { useMsal } from '@azure/msal-react';\r\nimport { useEffect, useState } from 'react';\r\nimport { InteractionRequiredAuthError } from '@azure/msal-browser';\r\n\r\nconst useTaskLists = () => {\r\n  const { instance } = useMsal();\r\n  const [taskLists, setTaskLists] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchTaskLists = async () => {\r\n      try {\r\n        const account = instance.getActiveAccount();\r\n        if (!account) {\r\n          console.warn('No active account. User may not be signed in.');\r\n          return;\r\n        }\r\n\r\n        let response;\r\n        try {\r\n          response = await instance.acquireTokenSilent({\r\n            scopes: ['Tasks.Read'],\r\n            account,\r\n          });\r\n        } catch (error) {\r\n          if (error instanceof InteractionRequiredAuthError) {\r\n            response = await instance.loginPopup({\r\n              scopes: ['Tasks.Read'],\r\n            });\r\n          } else {\r\n            throw error;\r\n          }\r\n        }\r\n\r\n        const res = await fetch('https://graph.microsoft.com/v1.0/me/todo/lists', {\r\n          headers: {\r\n            Authorization: `Bearer ${response.accessToken}`,\r\n          },\r\n        });\r\n\r\n        const data = await res.json();\r\n        setTaskLists(data.value || []);\r\n      } catch (error) {\r\n        console.error('Error fetching task lists:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchTaskLists();\r\n  }, [instance]);\r\n\r\n  return { taskLists, loading };\r\n};\r\n\r\nexport default useTaskLists;"],"mappings":"AAAA;AACA,OAASA,OAAO,KAAQ,mBAAmB,CAC3C,OAASC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC3C,OAASC,4BAA4B,KAAQ,qBAAqB,CAElE,KAAM,CAAAC,YAAY,CAAGA,CAAA,GAAM,CACzB,KAAM,CAAEC,QAAS,CAAC,CAAGL,OAAO,CAAC,CAAC,CAC9B,KAAM,CAACM,SAAS,CAAEC,YAAY,CAAC,CAAGL,QAAQ,CAAC,EAAE,CAAC,CAC9C,KAAM,CAACM,OAAO,CAAEC,UAAU,CAAC,CAAGP,QAAQ,CAAC,IAAI,CAAC,CAE5CD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAS,cAAc,CAAG,KAAAA,CAAA,GAAY,CACjC,GAAI,CACF,KAAM,CAAAC,OAAO,CAAGN,QAAQ,CAACO,gBAAgB,CAAC,CAAC,CAC3C,GAAI,CAACD,OAAO,CAAE,CACZE,OAAO,CAACC,IAAI,CAAC,+CAA+C,CAAC,CAC7D,OACF,CAEA,GAAI,CAAAC,QAAQ,CACZ,GAAI,CACFA,QAAQ,CAAG,KAAM,CAAAV,QAAQ,CAACW,kBAAkB,CAAC,CAC3CC,MAAM,CAAE,CAAC,YAAY,CAAC,CACtBN,OACF,CAAC,CAAC,CACJ,CAAE,MAAOO,KAAK,CAAE,CACd,GAAIA,KAAK,WAAY,CAAAf,4BAA4B,CAAE,CACjDY,QAAQ,CAAG,KAAM,CAAAV,QAAQ,CAACc,UAAU,CAAC,CACnCF,MAAM,CAAE,CAAC,YAAY,CACvB,CAAC,CAAC,CACJ,CAAC,IAAM,CACL,KAAM,CAAAC,KAAK,CACb,CACF,CAEA,KAAM,CAAAE,GAAG,CAAG,KAAM,CAAAC,KAAK,CAAC,gDAAgD,CAAE,CACxEC,OAAO,CAAE,CACPC,aAAa,WAAAC,MAAA,CAAYT,QAAQ,CAACU,WAAW,CAC/C,CACF,CAAC,CAAC,CAEF,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAN,GAAG,CAACO,IAAI,CAAC,CAAC,CAC7BpB,YAAY,CAACmB,IAAI,CAACE,KAAK,EAAI,EAAE,CAAC,CAChC,CAAE,MAAOV,KAAK,CAAE,CACdL,OAAO,CAACK,KAAK,CAAC,4BAA4B,CAAEA,KAAK,CAAC,CACpD,CAAC,OAAS,CACRT,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAEDC,cAAc,CAAC,CAAC,CAClB,CAAC,CAAE,CAACL,QAAQ,CAAC,CAAC,CAEd,MAAO,CAAEC,SAAS,CAAEE,OAAQ,CAAC,CAC/B,CAAC,CAED,cAAe,CAAAJ,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}