{"ast":null,"code":"var _jsxFileName = \"C:\\\\_Projects\\\\DGL_ToDo\\\\react_todo_dashboard2\\\\src\\\\App.jsx\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport useTaskLists from './hooks/useTaskLists';\nimport useTasks from './hooks/useTasks';\nimport TaskListSelector from './components/TaskListSelector';\nimport TaskPanel from './components/TaskPanel';\nimport SignInButton from './components/SignInButton';\nimport PreviewPanel from './components/PreviewPanel';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const {\n    taskLists,\n    loading: loadingLists\n  } = useTaskLists();\n  const [selectedGroup, setSelectedGroup] = useState('Group 1');\n  const [panelSelections, setPanelSelections] = useState(Array(6).fill(''));\n  const [savedGroups, setSavedGroups] = useState(() => {\n    const saved = localStorage.getItem('savedGroups');\n    return saved ? JSON.parse(saved) : {};\n  });\n  const [selectedTask, setSelectedTask] = useState(null);\n\n  // Load saved group on group change\n  useEffect(() => {\n    if (savedGroups[selectedGroup]) {\n      setPanelSelections(savedGroups[selectedGroup]);\n    }\n  }, [selectedGroup, savedGroups]);\n  const handlePanelListChange = (panelIndex, listId) => {\n    const updated = [...panelSelections];\n    updated[panelIndex] = listId;\n    setPanelSelections(updated);\n  };\n  const handleSaveGroup = () => {\n    const updatedGroups = {\n      ...savedGroups,\n      [selectedGroup]: [...panelSelections]\n    };\n    setSavedGroups(updatedGroups);\n    localStorage.setItem('savedGroups', JSON.stringify(updatedGroups));\n    alert(`Saved current setup to ${selectedGroup}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top-left\",\n        children: /*#__PURE__*/_jsxDEV(SignInButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSaveGroup,\n          children: \"Save Current Setup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top-right\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedGroup,\n          onChange: e => setSelectedGroup(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Group 1\",\n            children: \"Group 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Group 2\",\n            children: \"Group 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Group 3\",\n            children: \"Group 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel-grid\",\n      children: _s([...Array(6)].map(_s((_, index) => {\n        _s();\n        const listId = panelSelections[index];\n        const {\n          tasks,\n          loading: loadingTasks\n        } = useTasks(listId);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel\",\n          children: index === 5 ? /*#__PURE__*/_jsxDEV(PreviewPanel, {\n            task: selectedTask,\n            listId: selectedTask === null || selectedTask === void 0 ? void 0 : selectedTask.parentListId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(TaskListSelector, {\n              taskLists: taskLists,\n              selectedListId: listId,\n              onSelect: id => handlePanelListChange(index, id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this), loadingTasks ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Loading tasks...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(TaskPanel, {\n              tasks: tasks,\n              onSelectTask: task => setSelectedTask({\n                ...task,\n                parentListId: listId\n              }),\n              listId: listId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this);\n      }, \"G3LLop7Te3B9RLp88nTLUoUm4vQ=\", false, function () {\n        return [useTasks];\n      })), \"G3LLop7Te3B9RLp88nTLUoUm4vQ=\", false, function () {\n        return [useTasks];\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s2(App, \"8nDiM/fHsFuRsxUQPodUYH9uovM=\", false, function () {\n  return [useTaskLists];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useTaskLists","useTasks","TaskListSelector","TaskPanel","SignInButton","PreviewPanel","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s2","_s","$RefreshSig$","taskLists","loading","loadingLists","selectedGroup","setSelectedGroup","panelSelections","setPanelSelections","Array","fill","savedGroups","setSavedGroups","saved","localStorage","getItem","JSON","parse","selectedTask","setSelectedTask","handlePanelListChange","panelIndex","listId","updated","handleSaveGroup","updatedGroups","setItem","stringify","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","onChange","e","target","map","_","index","tasks","loadingTasks","task","parentListId","selectedListId","onSelect","id","onSelectTask","_c","$RefreshReg$"],"sources":["C:/_Projects/DGL_ToDo/react_todo_dashboard2/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport useTaskLists from './hooks/useTaskLists';\nimport useTasks from './hooks/useTasks';\nimport TaskListSelector from './components/TaskListSelector';\nimport TaskPanel from './components/TaskPanel';\nimport SignInButton from './components/SignInButton';\nimport PreviewPanel from './components/PreviewPanel';\nimport './styles.css';\n\nconst App = () => {\n  const { taskLists, loading: loadingLists } = useTaskLists();\n  const [selectedGroup, setSelectedGroup] = useState('Group 1');\n  const [panelSelections, setPanelSelections] = useState(Array(6).fill(''));\n  const [savedGroups, setSavedGroups] = useState(() => {\n    const saved = localStorage.getItem('savedGroups');\n    return saved ? JSON.parse(saved) : {};\n  });\n  const [selectedTask, setSelectedTask] = useState(null);\n\n  // Load saved group on group change\n  useEffect(() => {\n    if (savedGroups[selectedGroup]) {\n      setPanelSelections(savedGroups[selectedGroup]);\n    }\n  }, [selectedGroup, savedGroups]);\n\n  const handlePanelListChange = (panelIndex, listId) => {\n    const updated = [...panelSelections];\n    updated[panelIndex] = listId;\n    setPanelSelections(updated);\n  };\n\n  const handleSaveGroup = () => {\n    const updatedGroups = {\n      ...savedGroups,\n      [selectedGroup]: [...panelSelections],\n    };\n    setSavedGroups(updatedGroups);\n    localStorage.setItem('savedGroups', JSON.stringify(updatedGroups));\n    alert(`Saved current setup to ${selectedGroup}`);\n  };\n\n  return (\n    <div className=\"dashboard\">\n      <div className=\"top-bar\">\n        <div className=\"top-left\">\n          <SignInButton />\n        </div>\n        <div className=\"top-center\">\n          <button onClick={handleSaveGroup}>Save Current Setup</button>\n        </div>\n        <div className=\"top-right\">\n          <select value={selectedGroup} onChange={(e) => setSelectedGroup(e.target.value)}>\n            <option value=\"Group 1\">Group 1</option>\n            <option value=\"Group 2\">Group 2</option>\n            <option value=\"Group 3\">Group 3</option>\n          </select>\n        </div>\n      </div>\n\n      <div className=\"panel-grid\">\n        {[...Array(6)].map((_, index) => {\n          const listId = panelSelections[index];\n          const { tasks, loading: loadingTasks } = useTasks(listId);\n\n          return (\n            <div key={index} className=\"panel\">\n              {index === 5 ? (\n                <PreviewPanel task={selectedTask} listId={selectedTask?.parentListId} />\n              ) : (\n                <>\n                  <TaskListSelector\n                    taskLists={taskLists}\n                    selectedListId={listId}\n                    onSelect={(id) => handlePanelListChange(index, id)}\n                  />\n                  {loadingTasks ? (\n                    <p>Loading tasks...</p>\n                  ) : (\n                    <TaskPanel\n                      tasks={tasks}\n                      onSelectTask={(task) =>\n                        setSelectedTask({ ...task, parentListId: listId })\n                      }\n                      listId={listId}\n                    />\n                  )}\n                </>\n              )}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}