{"ast":null,"code":"// src/hooks/useTasks.js\nimport{useMsal}from'@azure/msal-react';import{useEffect,useState}from'react';const useTasks=listId=>{const{instance}=useMsal();const[tasks,setTasks]=useState([]);const[loading,setLoading]=useState(true);useEffect(()=>{if(!listId)return;const fetchTasks=async()=>{try{const account=instance.getActiveAccount();const response=await instance.acquireTokenSilent({scopes:['Tasks.Read'],account});const res=await fetch(\"https://graph.microsoft.com/v1.0/me/todo/lists/\".concat(listId,\"/tasks\"),{headers:{Authorization:\"Bearer \".concat(response.accessToken)}});const data=await res.json();setTasks(data.value||[]);}catch(error){console.error('Error fetching tasks:',error);}finally{setLoading(false);}};fetchTasks();},[listId,instance]);return{tasks,loading};};export default useTasks;","map":{"version":3,"names":["useMsal","useEffect","useState","useTasks","listId","instance","tasks","setTasks","loading","setLoading","fetchTasks","account","getActiveAccount","response","acquireTokenSilent","scopes","res","fetch","concat","headers","Authorization","accessToken","data","json","value","error","console"],"sources":["C:/_Projects/DGL_ToDo/react_todo_dashboard2/src/hooks/useTasks.js"],"sourcesContent":["// src/hooks/useTasks.js\r\nimport { useMsal } from '@azure/msal-react';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst useTasks = (listId) => {\r\n  const { instance } = useMsal();\r\n  const [tasks, setTasks] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (!listId) return;\r\n\r\n    const fetchTasks = async () => {\r\n      try {\r\n        const account = instance.getActiveAccount();\r\n        const response = await instance.acquireTokenSilent({\r\n          scopes: ['Tasks.Read'],\r\n          account,\r\n        });\r\n\r\n        const res = await fetch(`https://graph.microsoft.com/v1.0/me/todo/lists/${listId}/tasks`, {\r\n          headers: {\r\n            Authorization: `Bearer ${response.accessToken}`,\r\n          },\r\n        });\r\n\r\n        const data = await res.json();\r\n        setTasks(data.value || []);\r\n      } catch (error) {\r\n        console.error('Error fetching tasks:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchTasks();\r\n  }, [listId, instance]);\r\n\r\n  return { tasks, loading };\r\n};\r\n\r\nexport default useTasks;\r\n"],"mappings":"AAAA;AACA,OAASA,OAAO,KAAQ,mBAAmB,CAC3C,OAASC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAE3C,KAAM,CAAAC,QAAQ,CAAIC,MAAM,EAAK,CAC3B,KAAM,CAAEC,QAAS,CAAC,CAAGL,OAAO,CAAC,CAAC,CAC9B,KAAM,CAACM,KAAK,CAAEC,QAAQ,CAAC,CAAGL,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACM,OAAO,CAAEC,UAAU,CAAC,CAAGP,QAAQ,CAAC,IAAI,CAAC,CAE5CD,SAAS,CAAC,IAAM,CACd,GAAI,CAACG,MAAM,CAAE,OAEb,KAAM,CAAAM,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC7B,GAAI,CACF,KAAM,CAAAC,OAAO,CAAGN,QAAQ,CAACO,gBAAgB,CAAC,CAAC,CAC3C,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAR,QAAQ,CAACS,kBAAkB,CAAC,CACjDC,MAAM,CAAE,CAAC,YAAY,CAAC,CACtBJ,OACF,CAAC,CAAC,CAEF,KAAM,CAAAK,GAAG,CAAG,KAAM,CAAAC,KAAK,mDAAAC,MAAA,CAAmDd,MAAM,WAAU,CACxFe,OAAO,CAAE,CACPC,aAAa,WAAAF,MAAA,CAAYL,QAAQ,CAACQ,WAAW,CAC/C,CACF,CAAC,CAAC,CAEF,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAN,GAAG,CAACO,IAAI,CAAC,CAAC,CAC7BhB,QAAQ,CAACe,IAAI,CAACE,KAAK,EAAI,EAAE,CAAC,CAC5B,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAAC,CAC/C,CAAC,OAAS,CACRhB,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAEDC,UAAU,CAAC,CAAC,CACd,CAAC,CAAE,CAACN,MAAM,CAAEC,QAAQ,CAAC,CAAC,CAEtB,MAAO,CAAEC,KAAK,CAAEE,OAAQ,CAAC,CAC3B,CAAC,CAED,cAAe,CAAAL,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}