{"ast":null,"code":"var _jsxFileName = \"C:\\\\_Projects\\\\DGL_ToDo\\\\react_todo_dashboard2\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport useTaskLists from './hooks/useTaskLists';\nimport useTasks from './hooks/useTasks';\nimport TaskListSelector from './components/TaskListSelector';\nimport TaskPanel from './components/TaskPanel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const {\n    taskLists,\n    loading: loadingLists\n  } = useTaskLists();\n  const [selectedListId, setSelectedListId] = useState('');\n  const {\n    tasks,\n    loading: loadingTasks\n  } = useTasks(selectedListId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"top-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left\",\n        children: \"Sign In Button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center\",\n        children: \"Save Current Setup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right\",\n        children: loadingLists ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading lists...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(TaskListSelector, {\n          taskLists: taskLists,\n          selectedListId: selectedListId,\n          onSelect: setSelectedListId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"panels\",\n      children: [...Array(6)].map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel\",\n        children: loadingTasks ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading tasks...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(TaskPanel, {\n          tasks: tasks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 55\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"J2XEM+DpRAz+lw3L5n1STkf53l4=\", false, function () {\n  return [useTaskLists, useTasks];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useTaskLists","useTasks","TaskListSelector","TaskPanel","jsxDEV","_jsxDEV","App","_s","taskLists","loading","loadingLists","selectedListId","setSelectedListId","tasks","loadingTasks","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSelect","Array","map","_","index","_c","$RefreshReg$"],"sources":["C:/_Projects/DGL_ToDo/react_todo_dashboard2/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport useTaskLists from './hooks/useTaskLists';\nimport useTasks from './hooks/useTasks';\nimport TaskListSelector from './components/TaskListSelector';\nimport TaskPanel from './components/TaskPanel';\n\nconst App = () => {\n  const { taskLists, loading: loadingLists } = useTaskLists();\n  const [selectedListId, setSelectedListId] = useState('');\n  const { tasks, loading: loadingTasks } = useTasks(selectedListId);\n\n  return (\n    <div className=\"dashboard\">\n      <header className=\"top-bar\">\n        <div className=\"left\">Sign In Button</div>\n        <div className=\"center\">Save Current Setup</div>\n        <div className=\"right\">\n          {loadingLists ? (\n            <p>Loading lists...</p>\n          ) : (\n            <TaskListSelector\n              taskLists={taskLists}\n              selectedListId={selectedListId}\n              onSelect={setSelectedListId}\n            />\n          )}\n        </div>\n      </header>\n\n      <main className=\"panels\">\n        {[...Array(6)].map((_, index) => (\n          <div key={index} className=\"panel\">\n            {loadingTasks ? <p>Loading tasks...</p> : <TaskPanel tasks={tasks} />}\n          </div>\n        ))}\n      </main>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,gBAAgB,MAAM,+BAA+B;AAC5D,OAAOC,SAAS,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM;IAAEC,SAAS;IAAEC,OAAO,EAAEC;EAAa,CAAC,GAAGV,YAAY,CAAC,CAAC;EAC3D,MAAM,CAACW,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM;IAAEc,KAAK;IAAEJ,OAAO,EAAEK;EAAa,CAAC,GAAGb,QAAQ,CAACU,cAAc,CAAC;EAEjE,oBACEN,OAAA;IAAKU,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBX,OAAA;MAAQU,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACzBX,OAAA;QAAKU,SAAS,EAAC,MAAM;QAAAC,QAAA,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC1Cf,OAAA;QAAKU,SAAS,EAAC,QAAQ;QAAAC,QAAA,EAAC;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAChDf,OAAA;QAAKU,SAAS,EAAC,OAAO;QAAAC,QAAA,EACnBN,YAAY,gBACXL,OAAA;UAAAW,QAAA,EAAG;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,gBAEvBf,OAAA,CAACH,gBAAgB;UACfM,SAAS,EAAEA,SAAU;UACrBG,cAAc,EAAEA,cAAe;UAC/BU,QAAQ,EAAET;QAAkB;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B;MACF;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eAETf,OAAA;MAAMU,SAAS,EAAC,QAAQ;MAAAC,QAAA,EACrB,CAAC,GAAGM,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,kBAC1BpB,OAAA;QAAiBU,SAAS,EAAC,OAAO;QAAAC,QAAA,EAC/BF,YAAY,gBAAGT,OAAA;UAAAW,QAAA,EAAG;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,gBAAGf,OAAA,CAACF,SAAS;UAACU,KAAK,EAAEA;QAAM;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GAD7DK,KAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACb,EAAA,CAhCID,GAAG;EAAA,QACsCN,YAAY,EAEhBC,QAAQ;AAAA;AAAAyB,EAAA,GAH7CpB,GAAG;AAkCT,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}