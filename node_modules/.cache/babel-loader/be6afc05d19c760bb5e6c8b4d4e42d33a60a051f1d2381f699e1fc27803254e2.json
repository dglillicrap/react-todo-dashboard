{"ast":null,"code":"var _jsxFileName = \"C:\\\\_Projects\\\\DGL_ToDo\\\\react_todo_dashboard2\\\\src\\\\App.jsx\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport useTaskLists from './hooks/useTaskLists';\nimport useTasks from './hooks/useTasks';\nimport TaskListSelector from './components/TaskListSelector';\nimport TaskPanel from './components/TaskPanel';\nimport SignInButton from './components/SignInButton';\nimport PreviewPanel from './components/PreviewPanel';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const {\n    taskLists,\n    loading: loadingLists\n  } = useTaskLists();\n  const [selectedGroup, setSelectedGroup] = useState('Group 1');\n  const [panelSelections, setPanelSelections] = useState(Array(6).fill(''));\n  const [savedGroups, setSavedGroups] = useState({});\n  const [selectedTask, setSelectedTask] = useState(null);\n\n  // Load saved group on group change\n  useEffect(() => {\n    if (savedGroups[selectedGroup]) {\n      setPanelSelections(savedGroups[selectedGroup]);\n    }\n  }, [selectedGroup, savedGroups]);\n  const handlePanelListChange = (panelIndex, listId) => {\n    const updated = [...panelSelections];\n    updated[panelIndex] = listId;\n    setPanelSelections(updated);\n  };\n  const handleSaveGroup = () => {\n    setSavedGroups(prev => ({\n      ...prev,\n      [selectedGroup]: [...panelSelections]\n    }));\n    alert(`Saved current setup to ${selectedGroup}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top-left\",\n        children: /*#__PURE__*/_jsxDEV(SignInButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSaveGroup,\n          children: \"Save Current Setup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top-right\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedGroup,\n          onChange: e => setSelectedGroup(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Group 1\",\n            children: \"Group 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Group 2\",\n            children: \"Group 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Group 3\",\n            children: \"Group 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel-grid\",\n      children: _s([...Array(6)].map(_s((_, index) => {\n        _s();\n        const listId = panelSelections[index];\n        const {\n          tasks,\n          loading: loadingTasks\n        } = useTasks(listId);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel\",\n          children: [/*#__PURE__*/_jsxDEV(TaskListSelector, {\n            taskLists: taskLists,\n            selectedListId: listId,\n            onSelect: id => handlePanelListChange(index, id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), index === 5 ? /*#__PURE__*/_jsxDEV(PreviewPanel, {\n            task: selectedTask,\n            listId: listId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this) : loadingTasks ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading tasks...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(TaskPanel, {\n            tasks: tasks,\n            onSelectTask: setSelectedTask\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this);\n      }, \"G3LLop7Te3B9RLp88nTLUoUm4vQ=\", false, function () {\n        return [useTasks];\n      })), \"G3LLop7Te3B9RLp88nTLUoUm4vQ=\", false, function () {\n        return [useTasks];\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s2(App, \"ygxWHXwGu65Jsmv8V4UKbMCtGlU=\", false, function () {\n  return [useTaskLists];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useTaskLists","useTasks","TaskListSelector","TaskPanel","SignInButton","PreviewPanel","jsxDEV","_jsxDEV","App","_s2","_s","$RefreshSig$","taskLists","loading","loadingLists","selectedGroup","setSelectedGroup","panelSelections","setPanelSelections","Array","fill","savedGroups","setSavedGroups","selectedTask","setSelectedTask","handlePanelListChange","panelIndex","listId","updated","handleSaveGroup","prev","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","onChange","e","target","map","_","index","tasks","loadingTasks","selectedListId","onSelect","id","task","onSelectTask","_c","$RefreshReg$"],"sources":["C:/_Projects/DGL_ToDo/react_todo_dashboard2/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport useTaskLists from './hooks/useTaskLists';\nimport useTasks from './hooks/useTasks';\nimport TaskListSelector from './components/TaskListSelector';\nimport TaskPanel from './components/TaskPanel';\nimport SignInButton from './components/SignInButton';\nimport PreviewPanel from './components/PreviewPanel';\nimport './styles.css';\n\nconst App = () => {\n  const { taskLists, loading: loadingLists } = useTaskLists();\n  const [selectedGroup, setSelectedGroup] = useState('Group 1');\n  const [panelSelections, setPanelSelections] = useState(Array(6).fill(''));\n  const [savedGroups, setSavedGroups] = useState({});\n  const [selectedTask, setSelectedTask] = useState(null);\n\n  // Load saved group on group change\n  useEffect(() => {\n    if (savedGroups[selectedGroup]) {\n      setPanelSelections(savedGroups[selectedGroup]);\n    }\n  }, [selectedGroup, savedGroups]);\n\n  const handlePanelListChange = (panelIndex, listId) => {\n    const updated = [...panelSelections];\n    updated[panelIndex] = listId;\n    setPanelSelections(updated);\n  };\n\n  const handleSaveGroup = () => {\n    setSavedGroups((prev) => ({\n      ...prev,\n      [selectedGroup]: [...panelSelections],\n    }));\n    alert(`Saved current setup to ${selectedGroup}`);\n  };\n\n  return (\n    <div className=\"dashboard\">\n      <div className=\"top-bar\">\n        <div className=\"top-left\">\n          <SignInButton />\n        </div>\n        <div className=\"top-center\">\n          <button onClick={handleSaveGroup}>Save Current Setup</button>\n        </div>\n        <div className=\"top-right\">\n          <select value={selectedGroup} onChange={(e) => setSelectedGroup(e.target.value)}>\n            <option value=\"Group 1\">Group 1</option>\n            <option value=\"Group 2\">Group 2</option>\n            <option value=\"Group 3\">Group 3</option>\n          </select>\n        </div>\n      </div>\n\n      <div className=\"panel-grid\">\n        {[...Array(6)].map((_, index) => {\n          const listId = panelSelections[index];\n          const { tasks, loading: loadingTasks } = useTasks(listId);\n\n          return (\n            <div key={index} className=\"panel\">\n              <TaskListSelector\n                taskLists={taskLists}\n                selectedListId={listId}\n                onSelect={(id) => handlePanelListChange(index, id)}\n              />\n              {index === 5 ? (\n                <PreviewPanel task={selectedTask} listId={listId} />\n              ) : loadingTasks ? (\n                <p>Loading tasks...</p>\n              ) : (\n                <TaskPanel tasks={tasks} onSelectTask={setSelectedTask} />\n              )}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}