{"ast":null,"code":"var _s = $RefreshSig$();\n// src/hooks/useTaskLists.js\nimport { useMsal } from '@azure/msal-react';\nimport { useEffect, useState } from 'react';\nimport { InteractionRequiredAuthError } from '@azure/msal-browser';\nconst useTaskLists = () => {\n  _s();\n  const {\n    instance\n  } = useMsal();\n  const [taskLists, setTaskLists] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchTaskLists = async () => {\n      try {\n        const account = instance.getActiveAccount();\n        if (!account) {\n          console.warn('No active account. User may not be signed in.');\n          return;\n        }\n        let response;\n        try {\n          response = await instance.acquireTokenSilent({\n            scopes: ['Tasks.Read'],\n            account\n          });\n        } catch (error) {\n          if (error instanceof InteractionRequiredAuthError) {\n            response = await instance.loginPopup({\n              scopes: ['Tasks.Read']\n            });\n          } else {\n            throw error;\n          }\n        }\n        const res = await fetch('https://graph.microsoft.com/v1.0/me/todo/lists', {\n          headers: {\n            Authorization: `Bearer ${response.accessToken}`\n          }\n        });\n        const data = await res.json();\n        setTaskLists(data.value || []);\n      } catch (error) {\n        console.error('Error fetching task lists:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTaskLists();\n  }, [instance]);\n  return {\n    taskLists,\n    loading\n  };\n};\n_s(useTaskLists, \"9ijF90vO0fH6F0RjAq8brL+y9/c=\", false, function () {\n  return [useMsal];\n});\nexport default useTaskLists;","map":{"version":3,"names":["useMsal","useEffect","useState","InteractionRequiredAuthError","useTaskLists","_s","instance","taskLists","setTaskLists","loading","setLoading","fetchTaskLists","account","getActiveAccount","console","warn","response","acquireTokenSilent","scopes","error","loginPopup","res","fetch","headers","Authorization","accessToken","data","json","value"],"sources":["C:/_Projects/DGL_ToDo/react_todo_dashboard2/src/hooks/useTaskLists.js"],"sourcesContent":["// src/hooks/useTaskLists.js\r\nimport { useMsal } from '@azure/msal-react';\r\nimport { useEffect, useState } from 'react';\r\nimport { InteractionRequiredAuthError } from '@azure/msal-browser';\r\n\r\nconst useTaskLists = () => {\r\n  const { instance } = useMsal();\r\n  const [taskLists, setTaskLists] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchTaskLists = async () => {\r\n      try {\r\n        const account = instance.getActiveAccount();\r\n        if (!account) {\r\n          console.warn('No active account. User may not be signed in.');\r\n          return;\r\n        }\r\n\r\n        let response;\r\n        try {\r\n          response = await instance.acquireTokenSilent({\r\n            scopes: ['Tasks.Read'],\r\n            account,\r\n          });\r\n        } catch (error) {\r\n          if (error instanceof InteractionRequiredAuthError) {\r\n            response = await instance.loginPopup({\r\n              scopes: ['Tasks.Read'],\r\n            });\r\n          } else {\r\n            throw error;\r\n          }\r\n        }\r\n\r\n        const res = await fetch('https://graph.microsoft.com/v1.0/me/todo/lists', {\r\n          headers: {\r\n            Authorization: `Bearer ${response.accessToken}`,\r\n          },\r\n        });\r\n\r\n        const data = await res.json();\r\n        setTaskLists(data.value || []);\r\n      } catch (error) {\r\n        console.error('Error fetching task lists:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchTaskLists();\r\n  }, [instance]);\r\n\r\n  return { taskLists, loading };\r\n};\r\n\r\nexport default useTaskLists;"],"mappings":";AAAA;AACA,SAASA,OAAO,QAAQ,mBAAmB;AAC3C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,4BAA4B,QAAQ,qBAAqB;AAElE,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM;IAAEC;EAAS,CAAC,GAAGN,OAAO,CAAC,CAAC;EAC9B,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMU,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,OAAO,GAAGN,QAAQ,CAACO,gBAAgB,CAAC,CAAC;QAC3C,IAAI,CAACD,OAAO,EAAE;UACZE,OAAO,CAACC,IAAI,CAAC,+CAA+C,CAAC;UAC7D;QACF;QAEA,IAAIC,QAAQ;QACZ,IAAI;UACFA,QAAQ,GAAG,MAAMV,QAAQ,CAACW,kBAAkB,CAAC;YAC3CC,MAAM,EAAE,CAAC,YAAY,CAAC;YACtBN;UACF,CAAC,CAAC;QACJ,CAAC,CAAC,OAAOO,KAAK,EAAE;UACd,IAAIA,KAAK,YAAYhB,4BAA4B,EAAE;YACjDa,QAAQ,GAAG,MAAMV,QAAQ,CAACc,UAAU,CAAC;cACnCF,MAAM,EAAE,CAAC,YAAY;YACvB,CAAC,CAAC;UACJ,CAAC,MAAM;YACL,MAAMC,KAAK;UACb;QACF;QAEA,MAAME,GAAG,GAAG,MAAMC,KAAK,CAAC,gDAAgD,EAAE;UACxEC,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUR,QAAQ,CAACS,WAAW;UAC/C;QACF,CAAC,CAAC;QAEF,MAAMC,IAAI,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,CAAC;QAC7BnB,YAAY,CAACkB,IAAI,CAACE,KAAK,IAAI,EAAE,CAAC;MAChC,CAAC,CAAC,OAAOT,KAAK,EAAE;QACdL,OAAO,CAACK,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD,CAAC,SAAS;QACRT,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDC,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACL,QAAQ,CAAC,CAAC;EAEd,OAAO;IAAEC,SAAS;IAAEE;EAAQ,CAAC;AAC/B,CAAC;AAACJ,EAAA,CAjDID,YAAY;EAAA,QACKJ,OAAO;AAAA;AAkD9B,eAAeI,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}