{"ast":null,"code":"/*! @azure/msal-browser v4.24.1 2025-09-30 */\n'use strict';\n\nimport { createClientAuthError, ClientAuthErrorCodes } from '@azure/msal-common/browser';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n// Cookie life calculation (hours * minutes * seconds * ms)\nconst COOKIE_LIFE_MULTIPLIER = 24 * 60 * 60 * 1000;\nconst SameSiteOptions = {\n  Lax: \"Lax\",\n  None: \"None\"\n};\nclass CookieStorage {\n  initialize() {\n    return Promise.resolve();\n  }\n  getItem(key) {\n    const name = \"\".concat(encodeURIComponent(key));\n    const cookieList = document.cookie.split(\";\");\n    for (let i = 0; i < cookieList.length; i++) {\n      const cookie = cookieList[i];\n      const [key, ...rest] = decodeURIComponent(cookie).trim().split(\"=\");\n      const value = rest.join(\"=\");\n      if (key === name) {\n        return value;\n      }\n    }\n    return \"\";\n  }\n  getUserData() {\n    throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n  }\n  setItem(key, value, cookieLifeDays) {\n    let secure = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n    let sameSite = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : SameSiteOptions.Lax;\n    let cookieStr = \"\".concat(encodeURIComponent(key), \"=\").concat(encodeURIComponent(value), \";path=/;SameSite=\").concat(sameSite, \";\");\n    if (cookieLifeDays) {\n      const expireTime = getCookieExpirationTime(cookieLifeDays);\n      cookieStr += \"expires=\".concat(expireTime, \";\");\n    }\n    if (secure || sameSite === SameSiteOptions.None) {\n      // SameSite None requires Secure flag\n      cookieStr += \"Secure;\";\n    }\n    document.cookie = cookieStr;\n  }\n  async setUserData() {\n    return Promise.reject(createClientAuthError(ClientAuthErrorCodes.methodNotImplemented));\n  }\n  removeItem(key) {\n    // Setting expiration to -1 removes it\n    this.setItem(key, \"\", -1);\n  }\n  getKeys() {\n    const cookieList = document.cookie.split(\";\");\n    const keys = [];\n    cookieList.forEach(cookie => {\n      const cookieParts = decodeURIComponent(cookie).trim().split(\"=\");\n      keys.push(cookieParts[0]);\n    });\n    return keys;\n  }\n  containsKey(key) {\n    return this.getKeys().includes(key);\n  }\n  decryptData() {\n    // Cookie storage does not support encryption, so this method is a no-op\n    return Promise.resolve(null);\n  }\n}\n/**\r\n * Get cookie expiration time\r\n * @param cookieLifeDays\r\n */\nfunction getCookieExpirationTime(cookieLifeDays) {\n  const today = new Date();\n  const expr = new Date(today.getTime() + cookieLifeDays * COOKIE_LIFE_MULTIPLIER);\n  return expr.toUTCString();\n}\nexport { CookieStorage, SameSiteOptions, getCookieExpirationTime };","map":{"version":3,"names":["COOKIE_LIFE_MULTIPLIER","SameSiteOptions","Lax","None","CookieStorage","initialize","Promise","resolve","getItem","key","name","concat","encodeURIComponent","cookieList","document","cookie","split","i","length","rest","decodeURIComponent","trim","value","join","getUserData","createClientAuthError","ClientAuthErrorCodes","methodNotImplemented","setItem","cookieLifeDays","secure","arguments","undefined","sameSite","cookieStr","expireTime","getCookieExpirationTime","setUserData","reject","removeItem","getKeys","keys","forEach","cookieParts","push","containsKey","includes","decryptData","today","Date","expr","getTime","toUTCString"],"sources":["C:\\_Projects\\DGL_ToDo\\react_todo_dashboard2\\node_modules\\@azure\\msal-browser\\src\\cache\\CookieStorage.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    ClientAuthErrorCodes,\n    createClientAuthError,\n} from \"@azure/msal-common/browser\";\nimport { IWindowStorage } from \"./IWindowStorage.js\";\n\n// Cookie life calculation (hours * minutes * seconds * ms)\nconst COOKIE_LIFE_MULTIPLIER = 24 * 60 * 60 * 1000;\n\nexport const SameSiteOptions = {\n    Lax: \"Lax\",\n    None: \"None\",\n} as const;\nexport type SameSiteOptions =\n    (typeof SameSiteOptions)[keyof typeof SameSiteOptions];\n\nexport class CookieStorage implements IWindowStorage<string> {\n    initialize(): Promise<void> {\n        return Promise.resolve();\n    }\n\n    getItem(key: string): string | null {\n        const name = `${encodeURIComponent(key)}`;\n        const cookieList = document.cookie.split(\";\");\n        for (let i = 0; i < cookieList.length; i++) {\n            const cookie = cookieList[i];\n            const [key, ...rest] = decodeURIComponent(cookie).trim().split(\"=\");\n            const value = rest.join(\"=\");\n\n            if (key === name) {\n                return value;\n            }\n        }\n        return \"\";\n    }\n\n    getUserData(): string | null {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n\n    setItem(\n        key: string,\n        value: string,\n        cookieLifeDays?: number,\n        secure: boolean = true,\n        sameSite: SameSiteOptions = SameSiteOptions.Lax\n    ): void {\n        let cookieStr = `${encodeURIComponent(key)}=${encodeURIComponent(\n            value\n        )};path=/;SameSite=${sameSite};`;\n\n        if (cookieLifeDays) {\n            const expireTime = getCookieExpirationTime(cookieLifeDays);\n            cookieStr += `expires=${expireTime};`;\n        }\n\n        if (secure || sameSite === SameSiteOptions.None) {\n            // SameSite None requires Secure flag\n            cookieStr += \"Secure;\";\n        }\n\n        document.cookie = cookieStr;\n    }\n\n    async setUserData(): Promise<void> {\n        return Promise.reject(\n            createClientAuthError(ClientAuthErrorCodes.methodNotImplemented)\n        );\n    }\n\n    removeItem(key: string): void {\n        // Setting expiration to -1 removes it\n        this.setItem(key, \"\", -1);\n    }\n\n    getKeys(): string[] {\n        const cookieList = document.cookie.split(\";\");\n        const keys: Array<string> = [];\n        cookieList.forEach((cookie) => {\n            const cookieParts = decodeURIComponent(cookie).trim().split(\"=\");\n            keys.push(cookieParts[0]);\n        });\n\n        return keys;\n    }\n\n    containsKey(key: string): boolean {\n        return this.getKeys().includes(key);\n    }\n\n    decryptData(): Promise<object | null> {\n        // Cookie storage does not support encryption, so this method is a no-op\n        return Promise.resolve(null);\n    }\n}\n\n/**\n * Get cookie expiration time\n * @param cookieLifeDays\n */\nexport function getCookieExpirationTime(cookieLifeDays: number): string {\n    const today = new Date();\n    const expr = new Date(\n        today.getTime() + cookieLifeDays * COOKIE_LIFE_MULTIPLIER\n    );\n    return expr.toUTCString();\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}